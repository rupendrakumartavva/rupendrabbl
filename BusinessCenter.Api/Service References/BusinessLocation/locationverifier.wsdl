<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://tempuri.org/newWebServices/LocationVerifier" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" targetNamespace="http://tempuri.org/newWebServices/LocationVerifier" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <s:schema elementFormDefault="qualified" targetNamespace="http://tempuri.org/newWebServices/LocationVerifier">
      <s:element name="verifyDCAddressThrouString">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="verifyDCAddressThrouStringResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="verifyDCAddressThrouStringResult" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="ReturnObject">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="returnCodes" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="details" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="returnDataset">
            <s:complexType>
              <s:sequence>
                <s:element ref="s:schema" />
                <s:any />
              </s:sequence>
            </s:complexType>
          </s:element>
          <s:element minOccurs="0" maxOccurs="1" name="returnBlkAddrDataset">
            <s:complexType>
              <s:sequence>
                <s:element ref="s:schema" />
                <s:any />
              </s:sequence>
            </s:complexType>
          </s:element>
          <s:element minOccurs="0" maxOccurs="1" name="returnCDDataSet">
            <s:complexType>
              <s:sequence>
                <s:element ref="s:schema" />
                <s:any />
              </s:sequence>
            </s:complexType>
          </s:element>
          <s:element minOccurs="0" maxOccurs="1" name="UNIT" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="UNITNUMBER" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="sourceOperation" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="processTime" type="s:string" />
        </s:sequence>
      </s:complexType>
      <s:element name="verifyDCAddressThrouString2">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="f" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="verifyDCAddressThrouString2Response">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="verifyDCAddressThrouString2Result" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="verifyDCAddressThrouComponents">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="AddNumber" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AddNumberSuffix" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="StName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="StType" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Quad" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="verifyDCAddressThrouComponentsResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="verifyDCAddressThrouComponentsResult" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="verifyDCAddressThrouComponents2">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="AddNumber" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="AddNumberSuffix" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="StName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="StType" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Quad" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="f" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="verifyDCAddressThrouComponents2Response">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="verifyDCAddressThrouComponents2Result" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findOutsideLocation">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Location" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="City" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="State" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Zipcode" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findOutsideLocationResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findOutsideLocationResult" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findOutsideLocation2">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Location" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="City" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="State" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Zipcode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="f" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findOutsideLocation2Response">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findOutsideLocation2Result" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findInOutsideLocation">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Location" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="City" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="State" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Zipcode" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findInOutsideLocationResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findInOutsideLocationResult" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findInOutsideLocation2">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Location" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="City" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="State" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Zipcode" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="f" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findInOutsideLocation2Response">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findInOutsideLocation2Result" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findDCInterThrouString">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Intersection" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findDCInterThrouStringResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findDCInterThrouStringResult" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findDCInterThrouString2">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Intersection" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="f" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findDCInterThrouString2Response">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findDCInterThrouString2Result" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findDCInterThrouComponents">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="crossstreet1" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="crossstreet2" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findDCInterThrouComponentsResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findDCInterThrouComponentsResult" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findDCInterThrouComponents2">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="crossstreet1" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="crossstreet2" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="f" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findDCInterThrouComponents2Response">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findDCInterThrouComponents2Result" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findDCInterThrouThreeComponents">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="crossstreet1" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="xtype" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="crossstreet2" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findDCInterThrouThreeComponentsResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findDCInterThrouThreeComponentsResult" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findDCInterThrouThreeComponents2">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="crossstreet1" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="xtype" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="crossstreet2" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="f" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findDCInterThrouThreeComponents2Response">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findDCInterThrouThreeComponents2Result" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findDCBlkThrouString">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Block" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findDCBlkThrouStringResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findDCBlkThrouStringResult" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findDCBlkThrouString2">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Block" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="f" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findDCBlkThrouString2Response">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findDCBlkThrouString2Result" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findDCBlkThrouComponents">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="onstreet" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="fromstreet" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="tostreet" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findDCBlkThrouComponentsResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findDCBlkThrouComponentsResult" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findDCBlkThrouComponents2">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="onstreet" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="fromstreet" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="tostreet" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="f" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findDCBlkThrouComponents2Response">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findDCBlkThrouComponents2Result" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findAddFromSSL">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Square" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Suffix" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Lot" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findAddFromSSLResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findAddFromSSLResult" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findAddFromPlace">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Place" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findAddFromPlaceResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findAddFromPlaceResult" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findAddFromPlace2">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Place" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="f" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findAddFromPlace2Response">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findAddFromPlace2Result" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findAID">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="AID" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findAIDResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findAIDResult" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findAID2">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="AID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="f" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findAID2Response">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findAID2Result" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findLocation">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="str" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findLocationResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findLocationResult" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findLocation2">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="str" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="f" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findLocation2Response">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findLocation2Result" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findLocationBatch">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="addr_base64" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="addr_separator" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="chunkSequnce_separator" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findLocationBatchResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findLocationBatchResult" type="tns:ArrayOfAnyType" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="ArrayOfAnyType">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="anyType" nillable="true" />
        </s:sequence>
      </s:complexType>
      <s:element name="findLocationBatch2">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="addr_base64" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="addr_separator" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="chunkSequnce_separator" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="f" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findLocationBatch2Response">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findLocationBatch2Result" type="tns:ArrayOfAnyType" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findRdWySegIDFromMiniMARID">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="MiniMARADDID" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findRdWySegIDFromMiniMARIDResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findRdWySegIDFromMiniMARIDResult" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findRdWySegIDFromMiniMARID2">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="MiniMARADDID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="f" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findRdWySegIDFromMiniMARID2Response">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findRdWySegIDFromMiniMARID2Result" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findDCBlkFromIntersection">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="crossstreet1" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="crossstreet2" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findDCBlkFromIntersectionResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findDCBlkFromIntersectionResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findDCBlkFromIntersection2">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="crossstreet1" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="crossstreet2" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="f" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findDCBlkFromIntersection2Response">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findDCBlkFromIntersection2Result">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findMARIDFromMiniMARID">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="minimarid" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findMARIDFromMiniMARIDResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findMARIDFromMiniMARIDResult" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findMARIDFromMiniMARID2">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="minimarid" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="f" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findMARIDFromMiniMARID2Response">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findMARIDFromMiniMARID2Result" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findMiniMARIDFromMARID">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="marid" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findMiniMARIDFromMARIDResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findMiniMARIDFromMARIDResult" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findMiniMARIDFromMARID2">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="marid" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="f" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findMiniMARIDFromMARID2Response">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findMiniMARIDFromMARID2Result" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="reverseGeocoding">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="x" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="y" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="reverseGeocodingResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="reverseGeocodingResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="reverseGeocoding2">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="x" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="y" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="f" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="reverseGeocoding2Response">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="reverseGeocoding2Result">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="reverseLatLngGeocoding">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="lat" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="lng" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="reverseLatLngGeocodingResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="reverseLatLngGeocodingResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="reverseLatLngGeocoding2">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="lat" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="lng" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="f" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="reverseLatLngGeocoding2Response">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="reverseLatLngGeocoding2Result">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="submitAddress">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="address" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="name" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="agency" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="phone" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="email" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="source" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="comment" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="withVerification" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="submitReturnObj">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="status" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="ticketNum" type="s:string" />
        </s:sequence>
      </s:complexType>
      <s:element name="submitAddressResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="submitAddressResult" type="tns:submitReturnObj" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="submitAddress2">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="address" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="name" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="agency" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="phone" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="email" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="source" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="comment" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="withVerification" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="f" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="submitAddress2Response">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="submitAddress2Result" type="tns:submitReturnObj" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findAddFromSSL_new">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Square" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Suffix" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Lot" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findAddFromSSL_newResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findAddFromSSL_newResult" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findAddFromSSL_new2">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Square" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Suffix" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Lot" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="f" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findAddFromSSL_new2Response">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findAddFromSSL_new2Result" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findAddFromSSL2">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Square" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Suffix" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Lot" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="f" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findAddFromSSL2Response">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findAddFromSSL2Result" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findSSLFromAID">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="AID" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findSSLFromAIDResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findSSLFromAIDResult" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findSSLFromAID2">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="AID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="f" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findSSLFromAID2Response">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findSSLFromAID2Result" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="FindCondoUnitFromAID">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="AID" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="FindCondoUnitFromAIDResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="FindCondoUnitFromAIDResult" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="FindCondoUnitFromAID2">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="AID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="f" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="FindCondoUnitFromAID2Response">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="FindCondoUnitFromAID2Result" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findAliasFromAID">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="AID" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findAliasFromAIDResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findAliasFromAIDResult" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findAliasFromAID2">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="AID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="f" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findAliasFromAID2Response">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findAliasFromAID2Result" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findOwnerFromSSL">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Square" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Suffix" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Lot" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findOwnerFromSSLResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findOwnerFromSSLResult" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findOwnerFromSSL2">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Square" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Suffix" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Lot" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="f" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findOwnerFromSSL2Response">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findOwnerFromSSL2Result" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findSSLFromSquareSuffix">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Square" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Suffix" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findSSLFromSquareSuffixResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findSSLFromSquareSuffixResult" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findSSLFromSquareSuffix2">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Square" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Suffix" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="f" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findSSLFromSquareSuffix2Response">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findSSLFromSquareSuffix2Result" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="FindUnitFromAID">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="AID" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="FindUnitFromAIDResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="FindUnitFromAIDResult" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="FindUnitFromAID2">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="AID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="f" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="FindUnitFromAID2Response">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="FindUnitFromAID2Result" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findROW">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="roadwaysegid" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findROWResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findROWResult" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findROW2">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="roadwaysegid" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="f" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="findROW2Response">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="findROW2Result" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="getDCStreetNames">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="quad" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="initialetters" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="getDCStreetNamesResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="getDCStreetNamesResult" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="getDCStreetNames2">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="quad" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="initialetters" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="f" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="getDCStreetNames2Response">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="getDCStreetNames2Result" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="getDCAddresses">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="initialetters" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="getDCAddressesResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="getDCAddressesResult" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="getDCAddresses2">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="initialetters" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="f" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="getDCAddresses2Response">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="getDCAddresses2Result" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="getDCParkingMeter">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="meternumber" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="getDCParkingMeterResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="getDCParkingMeterResult" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="getDCParkingMeter2">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="meternumber" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="f" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="getDCParkingMeter2Response">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="getDCParkingMeter2Result" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="getDCStreetLight">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="streetlightnumber" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="getDCStreetLightResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="getDCStreetLightResult" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="getDCStreetLight2">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="streetlightnumber" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="f" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="getDCStreetLight2Response">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="getDCStreetLight2Result" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="getStreetSegIDFromRoadwaySegID">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="roadwaysegid" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="getStreetSegIDFromRoadwaySegIDResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="getStreetSegIDFromRoadwaySegIDResult" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="getStreetSegIDFromRoadwaySegID2">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="roadwaysegid" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="f" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="getStreetSegIDFromRoadwaySegID2Response">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="getStreetSegIDFromRoadwaySegID2Result" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="getRoadwaySegIDFromStreetSegID">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="streetsegid" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="getRoadwaySegIDFromStreetSegIDResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="getRoadwaySegIDFromStreetSegIDResult" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="getRoadwaySegIDFromStreetSegID2">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="streetsegid" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="f" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="getRoadwaySegIDFromStreetSegID2Response">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="getRoadwaySegIDFromStreetSegID2Result" type="tns:ReturnObject" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ReturnObject" nillable="true" type="tns:ReturnObject" />
      <s:element name="ArrayOfAnyType" nillable="true" type="tns:ArrayOfAnyType" />
      <s:element name="DataSet" nillable="true">
        <s:complexType>
          <s:sequence>
            <s:element ref="s:schema" />
            <s:any />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="submitReturnObj" nillable="true" type="tns:submitReturnObj" />
    </s:schema>
  </wsdl:types>
  <wsdl:message name="verifyDCAddressThrouStringSoapIn">
    <wsdl:part name="parameters" element="tns:verifyDCAddressThrouString" />
  </wsdl:message>
  <wsdl:message name="verifyDCAddressThrouStringSoapOut">
    <wsdl:part name="parameters" element="tns:verifyDCAddressThrouStringResponse" />
  </wsdl:message>
  <wsdl:message name="verifyDCAddressThrouString2SoapIn">
    <wsdl:part name="parameters" element="tns:verifyDCAddressThrouString2" />
  </wsdl:message>
  <wsdl:message name="verifyDCAddressThrouString2SoapOut">
    <wsdl:part name="parameters" element="tns:verifyDCAddressThrouString2Response" />
  </wsdl:message>
  <wsdl:message name="verifyDCAddressThrouComponentsSoapIn">
    <wsdl:part name="parameters" element="tns:verifyDCAddressThrouComponents" />
  </wsdl:message>
  <wsdl:message name="verifyDCAddressThrouComponentsSoapOut">
    <wsdl:part name="parameters" element="tns:verifyDCAddressThrouComponentsResponse" />
  </wsdl:message>
  <wsdl:message name="verifyDCAddressThrouComponents2SoapIn">
    <wsdl:part name="parameters" element="tns:verifyDCAddressThrouComponents2" />
  </wsdl:message>
  <wsdl:message name="verifyDCAddressThrouComponents2SoapOut">
    <wsdl:part name="parameters" element="tns:verifyDCAddressThrouComponents2Response" />
  </wsdl:message>
  <wsdl:message name="findOutsideLocationSoapIn">
    <wsdl:part name="parameters" element="tns:findOutsideLocation" />
  </wsdl:message>
  <wsdl:message name="findOutsideLocationSoapOut">
    <wsdl:part name="parameters" element="tns:findOutsideLocationResponse" />
  </wsdl:message>
  <wsdl:message name="findOutsideLocation2SoapIn">
    <wsdl:part name="parameters" element="tns:findOutsideLocation2" />
  </wsdl:message>
  <wsdl:message name="findOutsideLocation2SoapOut">
    <wsdl:part name="parameters" element="tns:findOutsideLocation2Response" />
  </wsdl:message>
  <wsdl:message name="findInOutsideLocationSoapIn">
    <wsdl:part name="parameters" element="tns:findInOutsideLocation" />
  </wsdl:message>
  <wsdl:message name="findInOutsideLocationSoapOut">
    <wsdl:part name="parameters" element="tns:findInOutsideLocationResponse" />
  </wsdl:message>
  <wsdl:message name="findInOutsideLocation2SoapIn">
    <wsdl:part name="parameters" element="tns:findInOutsideLocation2" />
  </wsdl:message>
  <wsdl:message name="findInOutsideLocation2SoapOut">
    <wsdl:part name="parameters" element="tns:findInOutsideLocation2Response" />
  </wsdl:message>
  <wsdl:message name="findDCInterThrouStringSoapIn">
    <wsdl:part name="parameters" element="tns:findDCInterThrouString" />
  </wsdl:message>
  <wsdl:message name="findDCInterThrouStringSoapOut">
    <wsdl:part name="parameters" element="tns:findDCInterThrouStringResponse" />
  </wsdl:message>
  <wsdl:message name="findDCInterThrouString2SoapIn">
    <wsdl:part name="parameters" element="tns:findDCInterThrouString2" />
  </wsdl:message>
  <wsdl:message name="findDCInterThrouString2SoapOut">
    <wsdl:part name="parameters" element="tns:findDCInterThrouString2Response" />
  </wsdl:message>
  <wsdl:message name="findDCInterThrouComponentsSoapIn">
    <wsdl:part name="parameters" element="tns:findDCInterThrouComponents" />
  </wsdl:message>
  <wsdl:message name="findDCInterThrouComponentsSoapOut">
    <wsdl:part name="parameters" element="tns:findDCInterThrouComponentsResponse" />
  </wsdl:message>
  <wsdl:message name="findDCInterThrouComponents2SoapIn">
    <wsdl:part name="parameters" element="tns:findDCInterThrouComponents2" />
  </wsdl:message>
  <wsdl:message name="findDCInterThrouComponents2SoapOut">
    <wsdl:part name="parameters" element="tns:findDCInterThrouComponents2Response" />
  </wsdl:message>
  <wsdl:message name="findDCInterThrouThreeComponentsSoapIn">
    <wsdl:part name="parameters" element="tns:findDCInterThrouThreeComponents" />
  </wsdl:message>
  <wsdl:message name="findDCInterThrouThreeComponentsSoapOut">
    <wsdl:part name="parameters" element="tns:findDCInterThrouThreeComponentsResponse" />
  </wsdl:message>
  <wsdl:message name="findDCInterThrouThreeComponents2SoapIn">
    <wsdl:part name="parameters" element="tns:findDCInterThrouThreeComponents2" />
  </wsdl:message>
  <wsdl:message name="findDCInterThrouThreeComponents2SoapOut">
    <wsdl:part name="parameters" element="tns:findDCInterThrouThreeComponents2Response" />
  </wsdl:message>
  <wsdl:message name="findDCBlkThrouStringSoapIn">
    <wsdl:part name="parameters" element="tns:findDCBlkThrouString" />
  </wsdl:message>
  <wsdl:message name="findDCBlkThrouStringSoapOut">
    <wsdl:part name="parameters" element="tns:findDCBlkThrouStringResponse" />
  </wsdl:message>
  <wsdl:message name="findDCBlkThrouString2SoapIn">
    <wsdl:part name="parameters" element="tns:findDCBlkThrouString2" />
  </wsdl:message>
  <wsdl:message name="findDCBlkThrouString2SoapOut">
    <wsdl:part name="parameters" element="tns:findDCBlkThrouString2Response" />
  </wsdl:message>
  <wsdl:message name="findDCBlkThrouComponentsSoapIn">
    <wsdl:part name="parameters" element="tns:findDCBlkThrouComponents" />
  </wsdl:message>
  <wsdl:message name="findDCBlkThrouComponentsSoapOut">
    <wsdl:part name="parameters" element="tns:findDCBlkThrouComponentsResponse" />
  </wsdl:message>
  <wsdl:message name="findDCBlkThrouComponents2SoapIn">
    <wsdl:part name="parameters" element="tns:findDCBlkThrouComponents2" />
  </wsdl:message>
  <wsdl:message name="findDCBlkThrouComponents2SoapOut">
    <wsdl:part name="parameters" element="tns:findDCBlkThrouComponents2Response" />
  </wsdl:message>
  <wsdl:message name="findAddFromSSLSoapIn">
    <wsdl:part name="parameters" element="tns:findAddFromSSL" />
  </wsdl:message>
  <wsdl:message name="findAddFromSSLSoapOut">
    <wsdl:part name="parameters" element="tns:findAddFromSSLResponse" />
  </wsdl:message>
  <wsdl:message name="findAddFromPlaceSoapIn">
    <wsdl:part name="parameters" element="tns:findAddFromPlace" />
  </wsdl:message>
  <wsdl:message name="findAddFromPlaceSoapOut">
    <wsdl:part name="parameters" element="tns:findAddFromPlaceResponse" />
  </wsdl:message>
  <wsdl:message name="findAddFromPlace2SoapIn">
    <wsdl:part name="parameters" element="tns:findAddFromPlace2" />
  </wsdl:message>
  <wsdl:message name="findAddFromPlace2SoapOut">
    <wsdl:part name="parameters" element="tns:findAddFromPlace2Response" />
  </wsdl:message>
  <wsdl:message name="findAIDSoapIn">
    <wsdl:part name="parameters" element="tns:findAID" />
  </wsdl:message>
  <wsdl:message name="findAIDSoapOut">
    <wsdl:part name="parameters" element="tns:findAIDResponse" />
  </wsdl:message>
  <wsdl:message name="findAID2SoapIn">
    <wsdl:part name="parameters" element="tns:findAID2" />
  </wsdl:message>
  <wsdl:message name="findAID2SoapOut">
    <wsdl:part name="parameters" element="tns:findAID2Response" />
  </wsdl:message>
  <wsdl:message name="findLocationSoapIn">
    <wsdl:part name="parameters" element="tns:findLocation" />
  </wsdl:message>
  <wsdl:message name="findLocationSoapOut">
    <wsdl:part name="parameters" element="tns:findLocationResponse" />
  </wsdl:message>
  <wsdl:message name="findLocation2SoapIn">
    <wsdl:part name="parameters" element="tns:findLocation2" />
  </wsdl:message>
  <wsdl:message name="findLocation2SoapOut">
    <wsdl:part name="parameters" element="tns:findLocation2Response" />
  </wsdl:message>
  <wsdl:message name="findLocationBatchSoapIn">
    <wsdl:part name="parameters" element="tns:findLocationBatch" />
  </wsdl:message>
  <wsdl:message name="findLocationBatchSoapOut">
    <wsdl:part name="parameters" element="tns:findLocationBatchResponse" />
  </wsdl:message>
  <wsdl:message name="findLocationBatch2SoapIn">
    <wsdl:part name="parameters" element="tns:findLocationBatch2" />
  </wsdl:message>
  <wsdl:message name="findLocationBatch2SoapOut">
    <wsdl:part name="parameters" element="tns:findLocationBatch2Response" />
  </wsdl:message>
  <wsdl:message name="findRdWySegIDFromMiniMARIDSoapIn">
    <wsdl:part name="parameters" element="tns:findRdWySegIDFromMiniMARID" />
  </wsdl:message>
  <wsdl:message name="findRdWySegIDFromMiniMARIDSoapOut">
    <wsdl:part name="parameters" element="tns:findRdWySegIDFromMiniMARIDResponse" />
  </wsdl:message>
  <wsdl:message name="findRdWySegIDFromMiniMARID2SoapIn">
    <wsdl:part name="parameters" element="tns:findRdWySegIDFromMiniMARID2" />
  </wsdl:message>
  <wsdl:message name="findRdWySegIDFromMiniMARID2SoapOut">
    <wsdl:part name="parameters" element="tns:findRdWySegIDFromMiniMARID2Response" />
  </wsdl:message>
  <wsdl:message name="findDCBlkFromIntersectionSoapIn">
    <wsdl:part name="parameters" element="tns:findDCBlkFromIntersection" />
  </wsdl:message>
  <wsdl:message name="findDCBlkFromIntersectionSoapOut">
    <wsdl:part name="parameters" element="tns:findDCBlkFromIntersectionResponse" />
  </wsdl:message>
  <wsdl:message name="findDCBlkFromIntersection2SoapIn">
    <wsdl:part name="parameters" element="tns:findDCBlkFromIntersection2" />
  </wsdl:message>
  <wsdl:message name="findDCBlkFromIntersection2SoapOut">
    <wsdl:part name="parameters" element="tns:findDCBlkFromIntersection2Response" />
  </wsdl:message>
  <wsdl:message name="findMARIDFromMiniMARIDSoapIn">
    <wsdl:part name="parameters" element="tns:findMARIDFromMiniMARID" />
  </wsdl:message>
  <wsdl:message name="findMARIDFromMiniMARIDSoapOut">
    <wsdl:part name="parameters" element="tns:findMARIDFromMiniMARIDResponse" />
  </wsdl:message>
  <wsdl:message name="findMARIDFromMiniMARID2SoapIn">
    <wsdl:part name="parameters" element="tns:findMARIDFromMiniMARID2" />
  </wsdl:message>
  <wsdl:message name="findMARIDFromMiniMARID2SoapOut">
    <wsdl:part name="parameters" element="tns:findMARIDFromMiniMARID2Response" />
  </wsdl:message>
  <wsdl:message name="findMiniMARIDFromMARIDSoapIn">
    <wsdl:part name="parameters" element="tns:findMiniMARIDFromMARID" />
  </wsdl:message>
  <wsdl:message name="findMiniMARIDFromMARIDSoapOut">
    <wsdl:part name="parameters" element="tns:findMiniMARIDFromMARIDResponse" />
  </wsdl:message>
  <wsdl:message name="findMiniMARIDFromMARID2SoapIn">
    <wsdl:part name="parameters" element="tns:findMiniMARIDFromMARID2" />
  </wsdl:message>
  <wsdl:message name="findMiniMARIDFromMARID2SoapOut">
    <wsdl:part name="parameters" element="tns:findMiniMARIDFromMARID2Response" />
  </wsdl:message>
  <wsdl:message name="reverseGeocodingSoapIn">
    <wsdl:part name="parameters" element="tns:reverseGeocoding" />
  </wsdl:message>
  <wsdl:message name="reverseGeocodingSoapOut">
    <wsdl:part name="parameters" element="tns:reverseGeocodingResponse" />
  </wsdl:message>
  <wsdl:message name="reverseGeocoding2SoapIn">
    <wsdl:part name="parameters" element="tns:reverseGeocoding2" />
  </wsdl:message>
  <wsdl:message name="reverseGeocoding2SoapOut">
    <wsdl:part name="parameters" element="tns:reverseGeocoding2Response" />
  </wsdl:message>
  <wsdl:message name="reverseLatLngGeocodingSoapIn">
    <wsdl:part name="parameters" element="tns:reverseLatLngGeocoding" />
  </wsdl:message>
  <wsdl:message name="reverseLatLngGeocodingSoapOut">
    <wsdl:part name="parameters" element="tns:reverseLatLngGeocodingResponse" />
  </wsdl:message>
  <wsdl:message name="reverseLatLngGeocoding2SoapIn">
    <wsdl:part name="parameters" element="tns:reverseLatLngGeocoding2" />
  </wsdl:message>
  <wsdl:message name="reverseLatLngGeocoding2SoapOut">
    <wsdl:part name="parameters" element="tns:reverseLatLngGeocoding2Response" />
  </wsdl:message>
  <wsdl:message name="submitAddressSoapIn">
    <wsdl:part name="parameters" element="tns:submitAddress" />
  </wsdl:message>
  <wsdl:message name="submitAddressSoapOut">
    <wsdl:part name="parameters" element="tns:submitAddressResponse" />
  </wsdl:message>
  <wsdl:message name="submitAddress2SoapIn">
    <wsdl:part name="parameters" element="tns:submitAddress2" />
  </wsdl:message>
  <wsdl:message name="submitAddress2SoapOut">
    <wsdl:part name="parameters" element="tns:submitAddress2Response" />
  </wsdl:message>
  <wsdl:message name="findAddFromSSL_newSoapIn">
    <wsdl:part name="parameters" element="tns:findAddFromSSL_new" />
  </wsdl:message>
  <wsdl:message name="findAddFromSSL_newSoapOut">
    <wsdl:part name="parameters" element="tns:findAddFromSSL_newResponse" />
  </wsdl:message>
  <wsdl:message name="findAddFromSSL_new2SoapIn">
    <wsdl:part name="parameters" element="tns:findAddFromSSL_new2" />
  </wsdl:message>
  <wsdl:message name="findAddFromSSL_new2SoapOut">
    <wsdl:part name="parameters" element="tns:findAddFromSSL_new2Response" />
  </wsdl:message>
  <wsdl:message name="findAddFromSSL2SoapIn">
    <wsdl:part name="parameters" element="tns:findAddFromSSL2" />
  </wsdl:message>
  <wsdl:message name="findAddFromSSL2SoapOut">
    <wsdl:part name="parameters" element="tns:findAddFromSSL2Response" />
  </wsdl:message>
  <wsdl:message name="findSSLFromAIDSoapIn">
    <wsdl:part name="parameters" element="tns:findSSLFromAID" />
  </wsdl:message>
  <wsdl:message name="findSSLFromAIDSoapOut">
    <wsdl:part name="parameters" element="tns:findSSLFromAIDResponse" />
  </wsdl:message>
  <wsdl:message name="findSSLFromAID2SoapIn">
    <wsdl:part name="parameters" element="tns:findSSLFromAID2" />
  </wsdl:message>
  <wsdl:message name="findSSLFromAID2SoapOut">
    <wsdl:part name="parameters" element="tns:findSSLFromAID2Response" />
  </wsdl:message>
  <wsdl:message name="FindCondoUnitFromAIDSoapIn">
    <wsdl:part name="parameters" element="tns:FindCondoUnitFromAID" />
  </wsdl:message>
  <wsdl:message name="FindCondoUnitFromAIDSoapOut">
    <wsdl:part name="parameters" element="tns:FindCondoUnitFromAIDResponse" />
  </wsdl:message>
  <wsdl:message name="FindCondoUnitFromAID2SoapIn">
    <wsdl:part name="parameters" element="tns:FindCondoUnitFromAID2" />
  </wsdl:message>
  <wsdl:message name="FindCondoUnitFromAID2SoapOut">
    <wsdl:part name="parameters" element="tns:FindCondoUnitFromAID2Response" />
  </wsdl:message>
  <wsdl:message name="findAliasFromAIDSoapIn">
    <wsdl:part name="parameters" element="tns:findAliasFromAID" />
  </wsdl:message>
  <wsdl:message name="findAliasFromAIDSoapOut">
    <wsdl:part name="parameters" element="tns:findAliasFromAIDResponse" />
  </wsdl:message>
  <wsdl:message name="findAliasFromAID2SoapIn">
    <wsdl:part name="parameters" element="tns:findAliasFromAID2" />
  </wsdl:message>
  <wsdl:message name="findAliasFromAID2SoapOut">
    <wsdl:part name="parameters" element="tns:findAliasFromAID2Response" />
  </wsdl:message>
  <wsdl:message name="findOwnerFromSSLSoapIn">
    <wsdl:part name="parameters" element="tns:findOwnerFromSSL" />
  </wsdl:message>
  <wsdl:message name="findOwnerFromSSLSoapOut">
    <wsdl:part name="parameters" element="tns:findOwnerFromSSLResponse" />
  </wsdl:message>
  <wsdl:message name="findOwnerFromSSL2SoapIn">
    <wsdl:part name="parameters" element="tns:findOwnerFromSSL2" />
  </wsdl:message>
  <wsdl:message name="findOwnerFromSSL2SoapOut">
    <wsdl:part name="parameters" element="tns:findOwnerFromSSL2Response" />
  </wsdl:message>
  <wsdl:message name="findSSLFromSquareSuffixSoapIn">
    <wsdl:part name="parameters" element="tns:findSSLFromSquareSuffix" />
  </wsdl:message>
  <wsdl:message name="findSSLFromSquareSuffixSoapOut">
    <wsdl:part name="parameters" element="tns:findSSLFromSquareSuffixResponse" />
  </wsdl:message>
  <wsdl:message name="findSSLFromSquareSuffix2SoapIn">
    <wsdl:part name="parameters" element="tns:findSSLFromSquareSuffix2" />
  </wsdl:message>
  <wsdl:message name="findSSLFromSquareSuffix2SoapOut">
    <wsdl:part name="parameters" element="tns:findSSLFromSquareSuffix2Response" />
  </wsdl:message>
  <wsdl:message name="FindUnitFromAIDSoapIn">
    <wsdl:part name="parameters" element="tns:FindUnitFromAID" />
  </wsdl:message>
  <wsdl:message name="FindUnitFromAIDSoapOut">
    <wsdl:part name="parameters" element="tns:FindUnitFromAIDResponse" />
  </wsdl:message>
  <wsdl:message name="FindUnitFromAID2SoapIn">
    <wsdl:part name="parameters" element="tns:FindUnitFromAID2" />
  </wsdl:message>
  <wsdl:message name="FindUnitFromAID2SoapOut">
    <wsdl:part name="parameters" element="tns:FindUnitFromAID2Response" />
  </wsdl:message>
  <wsdl:message name="findROWSoapIn">
    <wsdl:part name="parameters" element="tns:findROW" />
  </wsdl:message>
  <wsdl:message name="findROWSoapOut">
    <wsdl:part name="parameters" element="tns:findROWResponse" />
  </wsdl:message>
  <wsdl:message name="findROW2SoapIn">
    <wsdl:part name="parameters" element="tns:findROW2" />
  </wsdl:message>
  <wsdl:message name="findROW2SoapOut">
    <wsdl:part name="parameters" element="tns:findROW2Response" />
  </wsdl:message>
  <wsdl:message name="getDCStreetNamesSoapIn">
    <wsdl:part name="parameters" element="tns:getDCStreetNames" />
  </wsdl:message>
  <wsdl:message name="getDCStreetNamesSoapOut">
    <wsdl:part name="parameters" element="tns:getDCStreetNamesResponse" />
  </wsdl:message>
  <wsdl:message name="getDCStreetNames2SoapIn">
    <wsdl:part name="parameters" element="tns:getDCStreetNames2" />
  </wsdl:message>
  <wsdl:message name="getDCStreetNames2SoapOut">
    <wsdl:part name="parameters" element="tns:getDCStreetNames2Response" />
  </wsdl:message>
  <wsdl:message name="getDCAddressesSoapIn">
    <wsdl:part name="parameters" element="tns:getDCAddresses" />
  </wsdl:message>
  <wsdl:message name="getDCAddressesSoapOut">
    <wsdl:part name="parameters" element="tns:getDCAddressesResponse" />
  </wsdl:message>
  <wsdl:message name="getDCAddresses2SoapIn">
    <wsdl:part name="parameters" element="tns:getDCAddresses2" />
  </wsdl:message>
  <wsdl:message name="getDCAddresses2SoapOut">
    <wsdl:part name="parameters" element="tns:getDCAddresses2Response" />
  </wsdl:message>
  <wsdl:message name="getDCParkingMeterSoapIn">
    <wsdl:part name="parameters" element="tns:getDCParkingMeter" />
  </wsdl:message>
  <wsdl:message name="getDCParkingMeterSoapOut">
    <wsdl:part name="parameters" element="tns:getDCParkingMeterResponse" />
  </wsdl:message>
  <wsdl:message name="getDCParkingMeter2SoapIn">
    <wsdl:part name="parameters" element="tns:getDCParkingMeter2" />
  </wsdl:message>
  <wsdl:message name="getDCParkingMeter2SoapOut">
    <wsdl:part name="parameters" element="tns:getDCParkingMeter2Response" />
  </wsdl:message>
  <wsdl:message name="getDCStreetLightSoapIn">
    <wsdl:part name="parameters" element="tns:getDCStreetLight" />
  </wsdl:message>
  <wsdl:message name="getDCStreetLightSoapOut">
    <wsdl:part name="parameters" element="tns:getDCStreetLightResponse" />
  </wsdl:message>
  <wsdl:message name="getDCStreetLight2SoapIn">
    <wsdl:part name="parameters" element="tns:getDCStreetLight2" />
  </wsdl:message>
  <wsdl:message name="getDCStreetLight2SoapOut">
    <wsdl:part name="parameters" element="tns:getDCStreetLight2Response" />
  </wsdl:message>
  <wsdl:message name="getStreetSegIDFromRoadwaySegIDSoapIn">
    <wsdl:part name="parameters" element="tns:getStreetSegIDFromRoadwaySegID" />
  </wsdl:message>
  <wsdl:message name="getStreetSegIDFromRoadwaySegIDSoapOut">
    <wsdl:part name="parameters" element="tns:getStreetSegIDFromRoadwaySegIDResponse" />
  </wsdl:message>
  <wsdl:message name="getStreetSegIDFromRoadwaySegID2SoapIn">
    <wsdl:part name="parameters" element="tns:getStreetSegIDFromRoadwaySegID2" />
  </wsdl:message>
  <wsdl:message name="getStreetSegIDFromRoadwaySegID2SoapOut">
    <wsdl:part name="parameters" element="tns:getStreetSegIDFromRoadwaySegID2Response" />
  </wsdl:message>
  <wsdl:message name="getRoadwaySegIDFromStreetSegIDSoapIn">
    <wsdl:part name="parameters" element="tns:getRoadwaySegIDFromStreetSegID" />
  </wsdl:message>
  <wsdl:message name="getRoadwaySegIDFromStreetSegIDSoapOut">
    <wsdl:part name="parameters" element="tns:getRoadwaySegIDFromStreetSegIDResponse" />
  </wsdl:message>
  <wsdl:message name="getRoadwaySegIDFromStreetSegID2SoapIn">
    <wsdl:part name="parameters" element="tns:getRoadwaySegIDFromStreetSegID2" />
  </wsdl:message>
  <wsdl:message name="getRoadwaySegIDFromStreetSegID2SoapOut">
    <wsdl:part name="parameters" element="tns:getRoadwaySegIDFromStreetSegID2Response" />
  </wsdl:message>
  <wsdl:message name="verifyDCAddressThrouStringHttpGetIn">
    <wsdl:part name="Address" type="s:string" />
  </wsdl:message>
  <wsdl:message name="verifyDCAddressThrouStringHttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="verifyDCAddressThrouString2HttpGetIn">
    <wsdl:part name="Address" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="verifyDCAddressThrouString2HttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="verifyDCAddressThrouComponentsHttpGetIn">
    <wsdl:part name="AddNumber" type="s:string" />
    <wsdl:part name="AddNumberSuffix" type="s:string" />
    <wsdl:part name="StName" type="s:string" />
    <wsdl:part name="StType" type="s:string" />
    <wsdl:part name="Quad" type="s:string" />
  </wsdl:message>
  <wsdl:message name="verifyDCAddressThrouComponentsHttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="verifyDCAddressThrouComponents2HttpGetIn">
    <wsdl:part name="AddNumber" type="s:string" />
    <wsdl:part name="AddNumberSuffix" type="s:string" />
    <wsdl:part name="StName" type="s:string" />
    <wsdl:part name="StType" type="s:string" />
    <wsdl:part name="Quad" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="verifyDCAddressThrouComponents2HttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findOutsideLocationHttpGetIn">
    <wsdl:part name="Location" type="s:string" />
    <wsdl:part name="City" type="s:string" />
    <wsdl:part name="State" type="s:string" />
    <wsdl:part name="Zipcode" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findOutsideLocationHttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findOutsideLocation2HttpGetIn">
    <wsdl:part name="Location" type="s:string" />
    <wsdl:part name="City" type="s:string" />
    <wsdl:part name="State" type="s:string" />
    <wsdl:part name="Zipcode" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findOutsideLocation2HttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findInOutsideLocationHttpGetIn">
    <wsdl:part name="Location" type="s:string" />
    <wsdl:part name="City" type="s:string" />
    <wsdl:part name="State" type="s:string" />
    <wsdl:part name="Zipcode" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findInOutsideLocationHttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findInOutsideLocation2HttpGetIn">
    <wsdl:part name="Location" type="s:string" />
    <wsdl:part name="City" type="s:string" />
    <wsdl:part name="State" type="s:string" />
    <wsdl:part name="Zipcode" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findInOutsideLocation2HttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findDCInterThrouStringHttpGetIn">
    <wsdl:part name="Intersection" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findDCInterThrouStringHttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findDCInterThrouString2HttpGetIn">
    <wsdl:part name="Intersection" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findDCInterThrouString2HttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findDCInterThrouComponentsHttpGetIn">
    <wsdl:part name="crossstreet1" type="s:string" />
    <wsdl:part name="crossstreet2" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findDCInterThrouComponentsHttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findDCInterThrouComponents2HttpGetIn">
    <wsdl:part name="crossstreet1" type="s:string" />
    <wsdl:part name="crossstreet2" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findDCInterThrouComponents2HttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findDCInterThrouThreeComponentsHttpGetIn">
    <wsdl:part name="crossstreet1" type="s:string" />
    <wsdl:part name="xtype" type="s:string" />
    <wsdl:part name="crossstreet2" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findDCInterThrouThreeComponentsHttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findDCInterThrouThreeComponents2HttpGetIn">
    <wsdl:part name="crossstreet1" type="s:string" />
    <wsdl:part name="xtype" type="s:string" />
    <wsdl:part name="crossstreet2" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findDCInterThrouThreeComponents2HttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findDCBlkThrouStringHttpGetIn">
    <wsdl:part name="Block" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findDCBlkThrouStringHttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findDCBlkThrouString2HttpGetIn">
    <wsdl:part name="Block" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findDCBlkThrouString2HttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findDCBlkThrouComponentsHttpGetIn">
    <wsdl:part name="onstreet" type="s:string" />
    <wsdl:part name="fromstreet" type="s:string" />
    <wsdl:part name="tostreet" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findDCBlkThrouComponentsHttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findDCBlkThrouComponents2HttpGetIn">
    <wsdl:part name="onstreet" type="s:string" />
    <wsdl:part name="fromstreet" type="s:string" />
    <wsdl:part name="tostreet" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findDCBlkThrouComponents2HttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findAddFromSSLHttpGetIn">
    <wsdl:part name="Square" type="s:string" />
    <wsdl:part name="Suffix" type="s:string" />
    <wsdl:part name="Lot" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findAddFromSSLHttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findAddFromPlaceHttpGetIn">
    <wsdl:part name="Place" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findAddFromPlaceHttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findAddFromPlace2HttpGetIn">
    <wsdl:part name="Place" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findAddFromPlace2HttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findAIDHttpGetIn">
    <wsdl:part name="AID" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findAIDHttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findAID2HttpGetIn">
    <wsdl:part name="AID" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findAID2HttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findLocationHttpGetIn">
    <wsdl:part name="str" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findLocationHttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findLocation2HttpGetIn">
    <wsdl:part name="str" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findLocation2HttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findLocationBatchHttpGetIn">
    <wsdl:part name="addr_base64" type="s:string" />
    <wsdl:part name="addr_separator" type="s:string" />
    <wsdl:part name="chunkSequnce_separator" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findLocationBatchHttpGetOut">
    <wsdl:part name="Body" element="tns:ArrayOfAnyType" />
  </wsdl:message>
  <wsdl:message name="findLocationBatch2HttpGetIn">
    <wsdl:part name="addr_base64" type="s:string" />
    <wsdl:part name="addr_separator" type="s:string" />
    <wsdl:part name="chunkSequnce_separator" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findLocationBatch2HttpGetOut">
    <wsdl:part name="Body" element="tns:ArrayOfAnyType" />
  </wsdl:message>
  <wsdl:message name="findRdWySegIDFromMiniMARIDHttpGetIn">
    <wsdl:part name="MiniMARADDID" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findRdWySegIDFromMiniMARIDHttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findRdWySegIDFromMiniMARID2HttpGetIn">
    <wsdl:part name="MiniMARADDID" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findRdWySegIDFromMiniMARID2HttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findDCBlkFromIntersectionHttpGetIn">
    <wsdl:part name="crossstreet1" type="s:string" />
    <wsdl:part name="crossstreet2" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findDCBlkFromIntersectionHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="findDCBlkFromIntersection2HttpGetIn">
    <wsdl:part name="crossstreet1" type="s:string" />
    <wsdl:part name="crossstreet2" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findDCBlkFromIntersection2HttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="findMARIDFromMiniMARIDHttpGetIn">
    <wsdl:part name="minimarid" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findMARIDFromMiniMARIDHttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findMARIDFromMiniMARID2HttpGetIn">
    <wsdl:part name="minimarid" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findMARIDFromMiniMARID2HttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findMiniMARIDFromMARIDHttpGetIn">
    <wsdl:part name="marid" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findMiniMARIDFromMARIDHttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findMiniMARIDFromMARID2HttpGetIn">
    <wsdl:part name="marid" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findMiniMARIDFromMARID2HttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="reverseGeocodingHttpGetIn">
    <wsdl:part name="x" type="s:string" />
    <wsdl:part name="y" type="s:string" />
  </wsdl:message>
  <wsdl:message name="reverseGeocodingHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="reverseGeocoding2HttpGetIn">
    <wsdl:part name="x" type="s:string" />
    <wsdl:part name="y" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="reverseGeocoding2HttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="reverseLatLngGeocodingHttpGetIn">
    <wsdl:part name="lat" type="s:string" />
    <wsdl:part name="lng" type="s:string" />
  </wsdl:message>
  <wsdl:message name="reverseLatLngGeocodingHttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="reverseLatLngGeocoding2HttpGetIn">
    <wsdl:part name="lat" type="s:string" />
    <wsdl:part name="lng" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="reverseLatLngGeocoding2HttpGetOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="submitAddressHttpGetIn">
    <wsdl:part name="address" type="s:string" />
    <wsdl:part name="name" type="s:string" />
    <wsdl:part name="agency" type="s:string" />
    <wsdl:part name="phone" type="s:string" />
    <wsdl:part name="email" type="s:string" />
    <wsdl:part name="source" type="s:string" />
    <wsdl:part name="comment" type="s:string" />
    <wsdl:part name="withVerification" type="s:string" />
  </wsdl:message>
  <wsdl:message name="submitAddressHttpGetOut">
    <wsdl:part name="Body" element="tns:submitReturnObj" />
  </wsdl:message>
  <wsdl:message name="submitAddress2HttpGetIn">
    <wsdl:part name="address" type="s:string" />
    <wsdl:part name="name" type="s:string" />
    <wsdl:part name="agency" type="s:string" />
    <wsdl:part name="phone" type="s:string" />
    <wsdl:part name="email" type="s:string" />
    <wsdl:part name="source" type="s:string" />
    <wsdl:part name="comment" type="s:string" />
    <wsdl:part name="withVerification" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="submitAddress2HttpGetOut">
    <wsdl:part name="Body" element="tns:submitReturnObj" />
  </wsdl:message>
  <wsdl:message name="findAddFromSSL_newHttpGetIn">
    <wsdl:part name="Square" type="s:string" />
    <wsdl:part name="Suffix" type="s:string" />
    <wsdl:part name="Lot" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findAddFromSSL_newHttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findAddFromSSL_new2HttpGetIn">
    <wsdl:part name="Square" type="s:string" />
    <wsdl:part name="Suffix" type="s:string" />
    <wsdl:part name="Lot" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findAddFromSSL_new2HttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findAddFromSSL2HttpGetIn">
    <wsdl:part name="Square" type="s:string" />
    <wsdl:part name="Suffix" type="s:string" />
    <wsdl:part name="Lot" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findAddFromSSL2HttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findSSLFromAIDHttpGetIn">
    <wsdl:part name="AID" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findSSLFromAIDHttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findSSLFromAID2HttpGetIn">
    <wsdl:part name="AID" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findSSLFromAID2HttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="FindCondoUnitFromAIDHttpGetIn">
    <wsdl:part name="AID" type="s:string" />
  </wsdl:message>
  <wsdl:message name="FindCondoUnitFromAIDHttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="FindCondoUnitFromAID2HttpGetIn">
    <wsdl:part name="AID" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="FindCondoUnitFromAID2HttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findAliasFromAIDHttpGetIn">
    <wsdl:part name="AID" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findAliasFromAIDHttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findAliasFromAID2HttpGetIn">
    <wsdl:part name="AID" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findAliasFromAID2HttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findOwnerFromSSLHttpGetIn">
    <wsdl:part name="Square" type="s:string" />
    <wsdl:part name="Suffix" type="s:string" />
    <wsdl:part name="Lot" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findOwnerFromSSLHttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findOwnerFromSSL2HttpGetIn">
    <wsdl:part name="Square" type="s:string" />
    <wsdl:part name="Suffix" type="s:string" />
    <wsdl:part name="Lot" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findOwnerFromSSL2HttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findSSLFromSquareSuffixHttpGetIn">
    <wsdl:part name="Square" type="s:string" />
    <wsdl:part name="Suffix" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findSSLFromSquareSuffixHttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findSSLFromSquareSuffix2HttpGetIn">
    <wsdl:part name="Square" type="s:string" />
    <wsdl:part name="Suffix" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findSSLFromSquareSuffix2HttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="FindUnitFromAIDHttpGetIn">
    <wsdl:part name="AID" type="s:string" />
  </wsdl:message>
  <wsdl:message name="FindUnitFromAIDHttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="FindUnitFromAID2HttpGetIn">
    <wsdl:part name="AID" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="FindUnitFromAID2HttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findROWHttpGetIn">
    <wsdl:part name="roadwaysegid" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findROWHttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findROW2HttpGetIn">
    <wsdl:part name="roadwaysegid" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findROW2HttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="getDCStreetNamesHttpGetIn">
    <wsdl:part name="quad" type="s:string" />
    <wsdl:part name="initialetters" type="s:string" />
  </wsdl:message>
  <wsdl:message name="getDCStreetNamesHttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="getDCStreetNames2HttpGetIn">
    <wsdl:part name="quad" type="s:string" />
    <wsdl:part name="initialetters" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="getDCStreetNames2HttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="getDCAddressesHttpGetIn">
    <wsdl:part name="initialetters" type="s:string" />
  </wsdl:message>
  <wsdl:message name="getDCAddressesHttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="getDCAddresses2HttpGetIn">
    <wsdl:part name="initialetters" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="getDCAddresses2HttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="getDCParkingMeterHttpGetIn">
    <wsdl:part name="meternumber" type="s:string" />
  </wsdl:message>
  <wsdl:message name="getDCParkingMeterHttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="getDCParkingMeter2HttpGetIn">
    <wsdl:part name="meternumber" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="getDCParkingMeter2HttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="getDCStreetLightHttpGetIn">
    <wsdl:part name="streetlightnumber" type="s:string" />
  </wsdl:message>
  <wsdl:message name="getDCStreetLightHttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="getDCStreetLight2HttpGetIn">
    <wsdl:part name="streetlightnumber" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="getDCStreetLight2HttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="getStreetSegIDFromRoadwaySegIDHttpGetIn">
    <wsdl:part name="roadwaysegid" type="s:string" />
  </wsdl:message>
  <wsdl:message name="getStreetSegIDFromRoadwaySegIDHttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="getStreetSegIDFromRoadwaySegID2HttpGetIn">
    <wsdl:part name="roadwaysegid" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="getStreetSegIDFromRoadwaySegID2HttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="getRoadwaySegIDFromStreetSegIDHttpGetIn">
    <wsdl:part name="streetsegid" type="s:string" />
  </wsdl:message>
  <wsdl:message name="getRoadwaySegIDFromStreetSegIDHttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="getRoadwaySegIDFromStreetSegID2HttpGetIn">
    <wsdl:part name="streetsegid" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="getRoadwaySegIDFromStreetSegID2HttpGetOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="verifyDCAddressThrouStringHttpPostIn">
    <wsdl:part name="Address" type="s:string" />
  </wsdl:message>
  <wsdl:message name="verifyDCAddressThrouStringHttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="verifyDCAddressThrouString2HttpPostIn">
    <wsdl:part name="Address" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="verifyDCAddressThrouString2HttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="verifyDCAddressThrouComponentsHttpPostIn">
    <wsdl:part name="AddNumber" type="s:string" />
    <wsdl:part name="AddNumberSuffix" type="s:string" />
    <wsdl:part name="StName" type="s:string" />
    <wsdl:part name="StType" type="s:string" />
    <wsdl:part name="Quad" type="s:string" />
  </wsdl:message>
  <wsdl:message name="verifyDCAddressThrouComponentsHttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="verifyDCAddressThrouComponents2HttpPostIn">
    <wsdl:part name="AddNumber" type="s:string" />
    <wsdl:part name="AddNumberSuffix" type="s:string" />
    <wsdl:part name="StName" type="s:string" />
    <wsdl:part name="StType" type="s:string" />
    <wsdl:part name="Quad" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="verifyDCAddressThrouComponents2HttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findOutsideLocationHttpPostIn">
    <wsdl:part name="Location" type="s:string" />
    <wsdl:part name="City" type="s:string" />
    <wsdl:part name="State" type="s:string" />
    <wsdl:part name="Zipcode" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findOutsideLocationHttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findOutsideLocation2HttpPostIn">
    <wsdl:part name="Location" type="s:string" />
    <wsdl:part name="City" type="s:string" />
    <wsdl:part name="State" type="s:string" />
    <wsdl:part name="Zipcode" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findOutsideLocation2HttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findInOutsideLocationHttpPostIn">
    <wsdl:part name="Location" type="s:string" />
    <wsdl:part name="City" type="s:string" />
    <wsdl:part name="State" type="s:string" />
    <wsdl:part name="Zipcode" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findInOutsideLocationHttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findInOutsideLocation2HttpPostIn">
    <wsdl:part name="Location" type="s:string" />
    <wsdl:part name="City" type="s:string" />
    <wsdl:part name="State" type="s:string" />
    <wsdl:part name="Zipcode" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findInOutsideLocation2HttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findDCInterThrouStringHttpPostIn">
    <wsdl:part name="Intersection" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findDCInterThrouStringHttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findDCInterThrouString2HttpPostIn">
    <wsdl:part name="Intersection" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findDCInterThrouString2HttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findDCInterThrouComponentsHttpPostIn">
    <wsdl:part name="crossstreet1" type="s:string" />
    <wsdl:part name="crossstreet2" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findDCInterThrouComponentsHttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findDCInterThrouComponents2HttpPostIn">
    <wsdl:part name="crossstreet1" type="s:string" />
    <wsdl:part name="crossstreet2" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findDCInterThrouComponents2HttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findDCInterThrouThreeComponentsHttpPostIn">
    <wsdl:part name="crossstreet1" type="s:string" />
    <wsdl:part name="xtype" type="s:string" />
    <wsdl:part name="crossstreet2" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findDCInterThrouThreeComponentsHttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findDCInterThrouThreeComponents2HttpPostIn">
    <wsdl:part name="crossstreet1" type="s:string" />
    <wsdl:part name="xtype" type="s:string" />
    <wsdl:part name="crossstreet2" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findDCInterThrouThreeComponents2HttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findDCBlkThrouStringHttpPostIn">
    <wsdl:part name="Block" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findDCBlkThrouStringHttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findDCBlkThrouString2HttpPostIn">
    <wsdl:part name="Block" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findDCBlkThrouString2HttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findDCBlkThrouComponentsHttpPostIn">
    <wsdl:part name="onstreet" type="s:string" />
    <wsdl:part name="fromstreet" type="s:string" />
    <wsdl:part name="tostreet" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findDCBlkThrouComponentsHttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findDCBlkThrouComponents2HttpPostIn">
    <wsdl:part name="onstreet" type="s:string" />
    <wsdl:part name="fromstreet" type="s:string" />
    <wsdl:part name="tostreet" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findDCBlkThrouComponents2HttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findAddFromSSLHttpPostIn">
    <wsdl:part name="Square" type="s:string" />
    <wsdl:part name="Suffix" type="s:string" />
    <wsdl:part name="Lot" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findAddFromSSLHttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findAddFromPlaceHttpPostIn">
    <wsdl:part name="Place" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findAddFromPlaceHttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findAddFromPlace2HttpPostIn">
    <wsdl:part name="Place" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findAddFromPlace2HttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findAIDHttpPostIn">
    <wsdl:part name="AID" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findAIDHttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findAID2HttpPostIn">
    <wsdl:part name="AID" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findAID2HttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findLocationHttpPostIn">
    <wsdl:part name="str" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findLocationHttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findLocation2HttpPostIn">
    <wsdl:part name="str" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findLocation2HttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findLocationBatchHttpPostIn">
    <wsdl:part name="addr_base64" type="s:string" />
    <wsdl:part name="addr_separator" type="s:string" />
    <wsdl:part name="chunkSequnce_separator" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findLocationBatchHttpPostOut">
    <wsdl:part name="Body" element="tns:ArrayOfAnyType" />
  </wsdl:message>
  <wsdl:message name="findLocationBatch2HttpPostIn">
    <wsdl:part name="addr_base64" type="s:string" />
    <wsdl:part name="addr_separator" type="s:string" />
    <wsdl:part name="chunkSequnce_separator" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findLocationBatch2HttpPostOut">
    <wsdl:part name="Body" element="tns:ArrayOfAnyType" />
  </wsdl:message>
  <wsdl:message name="findRdWySegIDFromMiniMARIDHttpPostIn">
    <wsdl:part name="MiniMARADDID" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findRdWySegIDFromMiniMARIDHttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findRdWySegIDFromMiniMARID2HttpPostIn">
    <wsdl:part name="MiniMARADDID" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findRdWySegIDFromMiniMARID2HttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findDCBlkFromIntersectionHttpPostIn">
    <wsdl:part name="crossstreet1" type="s:string" />
    <wsdl:part name="crossstreet2" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findDCBlkFromIntersectionHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="findDCBlkFromIntersection2HttpPostIn">
    <wsdl:part name="crossstreet1" type="s:string" />
    <wsdl:part name="crossstreet2" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findDCBlkFromIntersection2HttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="findMARIDFromMiniMARIDHttpPostIn">
    <wsdl:part name="minimarid" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findMARIDFromMiniMARIDHttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findMARIDFromMiniMARID2HttpPostIn">
    <wsdl:part name="minimarid" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findMARIDFromMiniMARID2HttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findMiniMARIDFromMARIDHttpPostIn">
    <wsdl:part name="marid" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findMiniMARIDFromMARIDHttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findMiniMARIDFromMARID2HttpPostIn">
    <wsdl:part name="marid" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findMiniMARIDFromMARID2HttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="reverseGeocodingHttpPostIn">
    <wsdl:part name="x" type="s:string" />
    <wsdl:part name="y" type="s:string" />
  </wsdl:message>
  <wsdl:message name="reverseGeocodingHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="reverseGeocoding2HttpPostIn">
    <wsdl:part name="x" type="s:string" />
    <wsdl:part name="y" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="reverseGeocoding2HttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="reverseLatLngGeocodingHttpPostIn">
    <wsdl:part name="lat" type="s:string" />
    <wsdl:part name="lng" type="s:string" />
  </wsdl:message>
  <wsdl:message name="reverseLatLngGeocodingHttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="reverseLatLngGeocoding2HttpPostIn">
    <wsdl:part name="lat" type="s:string" />
    <wsdl:part name="lng" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="reverseLatLngGeocoding2HttpPostOut">
    <wsdl:part name="Body" element="tns:DataSet" />
  </wsdl:message>
  <wsdl:message name="submitAddressHttpPostIn">
    <wsdl:part name="address" type="s:string" />
    <wsdl:part name="name" type="s:string" />
    <wsdl:part name="agency" type="s:string" />
    <wsdl:part name="phone" type="s:string" />
    <wsdl:part name="email" type="s:string" />
    <wsdl:part name="source" type="s:string" />
    <wsdl:part name="comment" type="s:string" />
    <wsdl:part name="withVerification" type="s:string" />
  </wsdl:message>
  <wsdl:message name="submitAddressHttpPostOut">
    <wsdl:part name="Body" element="tns:submitReturnObj" />
  </wsdl:message>
  <wsdl:message name="submitAddress2HttpPostIn">
    <wsdl:part name="address" type="s:string" />
    <wsdl:part name="name" type="s:string" />
    <wsdl:part name="agency" type="s:string" />
    <wsdl:part name="phone" type="s:string" />
    <wsdl:part name="email" type="s:string" />
    <wsdl:part name="source" type="s:string" />
    <wsdl:part name="comment" type="s:string" />
    <wsdl:part name="withVerification" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="submitAddress2HttpPostOut">
    <wsdl:part name="Body" element="tns:submitReturnObj" />
  </wsdl:message>
  <wsdl:message name="findAddFromSSL_newHttpPostIn">
    <wsdl:part name="Square" type="s:string" />
    <wsdl:part name="Suffix" type="s:string" />
    <wsdl:part name="Lot" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findAddFromSSL_newHttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findAddFromSSL_new2HttpPostIn">
    <wsdl:part name="Square" type="s:string" />
    <wsdl:part name="Suffix" type="s:string" />
    <wsdl:part name="Lot" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findAddFromSSL_new2HttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findAddFromSSL2HttpPostIn">
    <wsdl:part name="Square" type="s:string" />
    <wsdl:part name="Suffix" type="s:string" />
    <wsdl:part name="Lot" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findAddFromSSL2HttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findSSLFromAIDHttpPostIn">
    <wsdl:part name="AID" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findSSLFromAIDHttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findSSLFromAID2HttpPostIn">
    <wsdl:part name="AID" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findSSLFromAID2HttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="FindCondoUnitFromAIDHttpPostIn">
    <wsdl:part name="AID" type="s:string" />
  </wsdl:message>
  <wsdl:message name="FindCondoUnitFromAIDHttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="FindCondoUnitFromAID2HttpPostIn">
    <wsdl:part name="AID" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="FindCondoUnitFromAID2HttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findAliasFromAIDHttpPostIn">
    <wsdl:part name="AID" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findAliasFromAIDHttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findAliasFromAID2HttpPostIn">
    <wsdl:part name="AID" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findAliasFromAID2HttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findOwnerFromSSLHttpPostIn">
    <wsdl:part name="Square" type="s:string" />
    <wsdl:part name="Suffix" type="s:string" />
    <wsdl:part name="Lot" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findOwnerFromSSLHttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findOwnerFromSSL2HttpPostIn">
    <wsdl:part name="Square" type="s:string" />
    <wsdl:part name="Suffix" type="s:string" />
    <wsdl:part name="Lot" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findOwnerFromSSL2HttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findSSLFromSquareSuffixHttpPostIn">
    <wsdl:part name="Square" type="s:string" />
    <wsdl:part name="Suffix" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findSSLFromSquareSuffixHttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findSSLFromSquareSuffix2HttpPostIn">
    <wsdl:part name="Square" type="s:string" />
    <wsdl:part name="Suffix" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findSSLFromSquareSuffix2HttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="FindUnitFromAIDHttpPostIn">
    <wsdl:part name="AID" type="s:string" />
  </wsdl:message>
  <wsdl:message name="FindUnitFromAIDHttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="FindUnitFromAID2HttpPostIn">
    <wsdl:part name="AID" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="FindUnitFromAID2HttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findROWHttpPostIn">
    <wsdl:part name="roadwaysegid" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findROWHttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="findROW2HttpPostIn">
    <wsdl:part name="roadwaysegid" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="findROW2HttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="getDCStreetNamesHttpPostIn">
    <wsdl:part name="quad" type="s:string" />
    <wsdl:part name="initialetters" type="s:string" />
  </wsdl:message>
  <wsdl:message name="getDCStreetNamesHttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="getDCStreetNames2HttpPostIn">
    <wsdl:part name="quad" type="s:string" />
    <wsdl:part name="initialetters" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="getDCStreetNames2HttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="getDCAddressesHttpPostIn">
    <wsdl:part name="initialetters" type="s:string" />
  </wsdl:message>
  <wsdl:message name="getDCAddressesHttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="getDCAddresses2HttpPostIn">
    <wsdl:part name="initialetters" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="getDCAddresses2HttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="getDCParkingMeterHttpPostIn">
    <wsdl:part name="meternumber" type="s:string" />
  </wsdl:message>
  <wsdl:message name="getDCParkingMeterHttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="getDCParkingMeter2HttpPostIn">
    <wsdl:part name="meternumber" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="getDCParkingMeter2HttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="getDCStreetLightHttpPostIn">
    <wsdl:part name="streetlightnumber" type="s:string" />
  </wsdl:message>
  <wsdl:message name="getDCStreetLightHttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="getDCStreetLight2HttpPostIn">
    <wsdl:part name="streetlightnumber" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="getDCStreetLight2HttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="getStreetSegIDFromRoadwaySegIDHttpPostIn">
    <wsdl:part name="roadwaysegid" type="s:string" />
  </wsdl:message>
  <wsdl:message name="getStreetSegIDFromRoadwaySegIDHttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="getStreetSegIDFromRoadwaySegID2HttpPostIn">
    <wsdl:part name="roadwaysegid" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="getStreetSegIDFromRoadwaySegID2HttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="getRoadwaySegIDFromStreetSegIDHttpPostIn">
    <wsdl:part name="streetsegid" type="s:string" />
  </wsdl:message>
  <wsdl:message name="getRoadwaySegIDFromStreetSegIDHttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:message name="getRoadwaySegIDFromStreetSegID2HttpPostIn">
    <wsdl:part name="streetsegid" type="s:string" />
    <wsdl:part name="f" type="s:string" />
  </wsdl:message>
  <wsdl:message name="getRoadwaySegIDFromStreetSegID2HttpPostOut">
    <wsdl:part name="Body" element="tns:ReturnObject" />
  </wsdl:message>
  <wsdl:portType name="LocationVerifierSoap">
    <wsdl:operation name="verifyDCAddressThrouString">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts one concatenated DC address string.</wsdl:documentation>
      <wsdl:input message="tns:verifyDCAddressThrouStringSoapIn" />
      <wsdl:output message="tns:verifyDCAddressThrouStringSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="verifyDCAddressThrouString2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts one concatenated DC address string. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:verifyDCAddressThrouString2SoapIn" />
      <wsdl:output message="tns:verifyDCAddressThrouString2SoapOut" />
    </wsdl:operation>
    <wsdl:operation name="verifyDCAddressThrouComponents">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts four address components of an DC address.</wsdl:documentation>
      <wsdl:input message="tns:verifyDCAddressThrouComponentsSoapIn" />
      <wsdl:output message="tns:verifyDCAddressThrouComponentsSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="verifyDCAddressThrouComponents2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts four address components of an DC address. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:verifyDCAddressThrouComponents2SoapIn" />
      <wsdl:output message="tns:verifyDCAddressThrouComponents2SoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findOutsideLocation">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a string containing an address or intersection that is outside of DC boundary. If the string doesn’t contain the city, state or zip code of the address or intersection, user needs to provide them separately. It only handles the addresses and intersections in Maryland and Virginia.</wsdl:documentation>
      <wsdl:input message="tns:findOutsideLocationSoapIn" />
      <wsdl:output message="tns:findOutsideLocationSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findOutsideLocation2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a string containing an addresses or intersections that are outside DC boundary. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findOutsideLocation2SoapIn" />
      <wsdl:output message="tns:findOutsideLocation2SoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findInOutsideLocation">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a string containing either an inside or outside DC addresses or intersections.</wsdl:documentation>
      <wsdl:input message="tns:findInOutsideLocationSoapIn" />
      <wsdl:output message="tns:findInOutsideLocationSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findInOutsideLocation2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a string containing either an inside or outside DC addresses or intersections. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findInOutsideLocation2SoapIn" />
      <wsdl:output message="tns:findInOutsideLocation2SoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouString">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts one concatenated DC intersection string containing two street names separated by ' AND ', ' &amp; ', ' @ ', 'BELOW', 'ABOVE', 'UNDER', 'OVER', 'AND RAMP FROM' or 'AND RAMP TO'.</wsdl:documentation>
      <wsdl:input message="tns:findDCInterThrouStringSoapIn" />
      <wsdl:output message="tns:findDCInterThrouStringSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouString2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts one concatenated DC intersection string containing two street names seperated by ' And ', ' &amp; ', ' @ ', 'BELOW', 'ABOVE', 'UNDER', 'OVER'. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findDCInterThrouString2SoapIn" />
      <wsdl:output message="tns:findDCInterThrouString2SoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouComponents">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts two DC street name components.</wsdl:documentation>
      <wsdl:input message="tns:findDCInterThrouComponentsSoapIn" />
      <wsdl:output message="tns:findDCInterThrouComponentsSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouComponents2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts two DC street name components. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findDCInterThrouComponents2SoapIn" />
      <wsdl:output message="tns:findDCInterThrouComponents2SoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouThreeComponents">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts two DC street names and one intersection type components. The XType can be one of the 'AND', '@', '&amp;', 'UNDER', 'ABOVE', 'BELOW', 'OVER', 'AND RAMP FROM', or 'AND RAMP TO' key words.</wsdl:documentation>
      <wsdl:input message="tns:findDCInterThrouThreeComponentsSoapIn" />
      <wsdl:output message="tns:findDCInterThrouThreeComponentsSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouThreeComponents2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts two DC street names and one intersection type components. The XType can be one of the 'AND', '@', '&amp;', 'UNDER', 'ABOVE', 'BELOW', 'OVER', 'AND RAMP FROM', or 'AND RAMP TO' key words. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findDCInterThrouThreeComponents2SoapIn" />
      <wsdl:output message="tns:findDCInterThrouThreeComponents2SoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findDCBlkThrouString">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts one concatenated string with three DC street names separated by either 'BETWEEN' and 'AND', 'FROM' and 'TO' or just the block with key word 'BLOCK' or 'BLK'.  It verifies blocks inside DC boundary only.</wsdl:documentation>
      <wsdl:input message="tns:findDCBlkThrouStringSoapIn" />
      <wsdl:output message="tns:findDCBlkThrouStringSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findDCBlkThrouString2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts one concatenated string with three DC street names separated by 'BETWEEN' and 'AND', or 'BLOCK', 'BLK'.  It verifies blocks inside DC boundary only. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findDCBlkThrouString2SoapIn" />
      <wsdl:output message="tns:findDCBlkThrouString2SoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findDCBlkThrouComponents">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts three street name components.  It verifies blocks inside DC boundary only.</wsdl:documentation>
      <wsdl:input message="tns:findDCBlkThrouComponentsSoapIn" />
      <wsdl:output message="tns:findDCBlkThrouComponentsSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findDCBlkThrouComponents2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts three street name components.  It verifies blocks inside DC boundary only. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findDCBlkThrouComponents2SoapIn" />
      <wsdl:output message="tns:findDCBlkThrouComponents2SoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findAddFromSSL">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts three input parameters, square, suffix, and lot.</wsdl:documentation>
      <wsdl:input message="tns:findAddFromSSLSoapIn" />
      <wsdl:output message="tns:findAddFromSSLSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findAddFromPlace">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts one string containing a DC place name.</wsdl:documentation>
      <wsdl:input message="tns:findAddFromPlaceSoapIn" />
      <wsdl:output message="tns:findAddFromPlaceSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findAddFromPlace2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts one string containing a DC place name. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findAddFromPlace2SoapIn" />
      <wsdl:output message="tns:findAddFromPlace2SoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findAID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts one string containing a DC AID, only numeric value is allowed.</wsdl:documentation>
      <wsdl:input message="tns:findAIDSoapIn" />
      <wsdl:output message="tns:findAIDSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findAID2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts one string containing a DC AID, only numeric value is allowed. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findAID2SoapIn" />
      <wsdl:output message="tns:findAID2SoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findLocation">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Wrapper class for DC address, intersection, block, AID, place name, DC Parking Meters (must start with PMT), and DC street light (must start with SLT), not available for outside DC locations or SSL.</wsdl:documentation>
      <wsdl:input message="tns:findLocationSoapIn" />
      <wsdl:output message="tns:findLocationSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findLocation2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Wrapper class for DC address, intersection, block, AID, place name, DC Parking Meters (must start with PMT), and DC street light (must start with SLT), not available for outside DC locations or SSL. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findLocation2SoapIn" />
      <wsdl:output message="tns:findLocation2SoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findLocationBatch">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This batch class specially designed for DCGIS Batch Geocoder desktop tool use only. </wsdl:documentation>
      <wsdl:input message="tns:findLocationBatchSoapIn" />
      <wsdl:output message="tns:findLocationBatchSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findLocationBatch2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This batch class specially designed for DCGIS Batch Geocoder desktop tool use only. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findLocationBatch2SoapIn" />
      <wsdl:output message="tns:findLocationBatch2SoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findRdWySegIDFromMiniMARID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Find RoadwaySegID from the Mini MAR address ID.</wsdl:documentation>
      <wsdl:input message="tns:findRdWySegIDFromMiniMARIDSoapIn" />
      <wsdl:output message="tns:findRdWySegIDFromMiniMARIDSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findRdWySegIDFromMiniMARID2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Find RoadwaySegID from the Mini MAR address ID. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findRdWySegIDFromMiniMARID2SoapIn" />
      <wsdl:output message="tns:findRdWySegIDFromMiniMARID2SoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findDCBlkFromIntersection">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Find all blocks associated with an intersection, the street names input here must be perfect to make the result useful, we assume that user got the street name from MAR in a previous intersection verification process.</wsdl:documentation>
      <wsdl:input message="tns:findDCBlkFromIntersectionSoapIn" />
      <wsdl:output message="tns:findDCBlkFromIntersectionSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findDCBlkFromIntersection2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Find all blocks associated with an intersection, the street names input here must be perfect to make the result useful, we assume that user got the street name from MAR intersection verification process. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findDCBlkFromIntersection2SoapIn" />
      <wsdl:output message="tns:findDCBlkFromIntersection2SoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findMARIDFromMiniMARID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Find MiniMAR id from a given MAR Id.</wsdl:documentation>
      <wsdl:input message="tns:findMARIDFromMiniMARIDSoapIn" />
      <wsdl:output message="tns:findMARIDFromMiniMARIDSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findMARIDFromMiniMARID2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Find MiniMAR id from a given MAR Id. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findMARIDFromMiniMARID2SoapIn" />
      <wsdl:output message="tns:findMARIDFromMiniMARID2SoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findMiniMARIDFromMARID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Find MAR id from a given Mini MAR Id.</wsdl:documentation>
      <wsdl:input message="tns:findMiniMARIDFromMARIDSoapIn" />
      <wsdl:output message="tns:findMiniMARIDFromMARIDSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findMiniMARIDFromMARID2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Find MAR id from a given Mini MAR Id. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findMiniMARIDFromMARID2SoapIn" />
      <wsdl:output message="tns:findMiniMARIDFromMARID2SoapOut" />
    </wsdl:operation>
    <wsdl:operation name="reverseGeocoding">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Find MAR address/alias points within 200 meters from the given Maryland State Plane (NAD 83) coordinates and returns the nearest five. The returned distance unit is meter.</wsdl:documentation>
      <wsdl:input message="tns:reverseGeocodingSoapIn" />
      <wsdl:output message="tns:reverseGeocodingSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="reverseGeocoding2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Find MAR address/alias points within 200 meters from the given Maryland State Plane (NAD 83) coordinates and returns the nearest five. The returned distance unit is meter. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:reverseGeocoding2SoapIn" />
      <wsdl:output message="tns:reverseGeocoding2SoapOut" />
    </wsdl:operation>
    <wsdl:operation name="reverseLatLngGeocoding">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Find MAR address/alias points within 200 meters from the given Latitude and Longitude coordinates and returns the nearest five. The returned distance unit is meter.</wsdl:documentation>
      <wsdl:input message="tns:reverseLatLngGeocodingSoapIn" />
      <wsdl:output message="tns:reverseLatLngGeocodingSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="reverseLatLngGeocoding2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Find MAR address/alias points within 200 meters from the given Latitude and Longitude coordinates and returns the nearest five. The returned distance unit is meter. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:reverseLatLngGeocoding2SoapIn" />
      <wsdl:output message="tns:reverseLatLngGeocoding2SoapOut" />
    </wsdl:operation>
    <wsdl:operation name="submitAddress">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Submit address automatically(silently, set withVerification=false), or submit address that is Valid Not Verified after verification (set withVerification=true). The default value of withVerification is true.</wsdl:documentation>
      <wsdl:input message="tns:submitAddressSoapIn" />
      <wsdl:output message="tns:submitAddressSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="submitAddress2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Submit addresses automatically(silently, set withVerification=false), or submit address that is Valid Not Veirifed after verification (set withVerification=true). The default value of withVerification is true. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:submitAddress2SoapIn" />
      <wsdl:output message="tns:submitAddress2SoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findAddFromSSL_new">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts square, suffix, lot and return all AIDs associated with this SSL.</wsdl:documentation>
      <wsdl:input message="tns:findAddFromSSL_newSoapIn" />
      <wsdl:output message="tns:findAddFromSSL_newSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findAddFromSSL_new2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts square, suffix, lot and return all AIDs associated with this SSL.</wsdl:documentation>
      <wsdl:input message="tns:findAddFromSSL_new2SoapIn" />
      <wsdl:output message="tns:findAddFromSSL_new2SoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findAddFromSSL2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts square, suffix, lot and return all AIDs associated with this SSL. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findAddFromSSL2SoapIn" />
      <wsdl:output message="tns:findAddFromSSL2SoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findSSLFromAID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts address id and return all SSLs associated with this address id.</wsdl:documentation>
      <wsdl:input message="tns:findSSLFromAIDSoapIn" />
      <wsdl:output message="tns:findSSLFromAIDSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findSSLFromAID2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts address id and return all SSLs associated with this address id. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findSSLFromAID2SoapIn" />
      <wsdl:output message="tns:findSSLFromAID2SoapOut" />
    </wsdl:operation>
    <wsdl:operation name="FindCondoUnitFromAID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts address id and return all Condo Units associated with this address id.</wsdl:documentation>
      <wsdl:input message="tns:FindCondoUnitFromAIDSoapIn" />
      <wsdl:output message="tns:FindCondoUnitFromAIDSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="FindCondoUnitFromAID2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts address id and return all Condo Units associated with this address id. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:FindCondoUnitFromAID2SoapIn" />
      <wsdl:output message="tns:FindCondoUnitFromAID2SoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findAliasFromAID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts address id and return all Aliases associated with this address id.</wsdl:documentation>
      <wsdl:input message="tns:findAliasFromAIDSoapIn" />
      <wsdl:output message="tns:findAliasFromAIDSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findAliasFromAID2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts address id and return all Aliases associated with this address id. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findAliasFromAID2SoapIn" />
      <wsdl:output message="tns:findAliasFromAID2SoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findOwnerFromSSL">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts square, suffix, lot and return owners associated with this SSL.</wsdl:documentation>
      <wsdl:input message="tns:findOwnerFromSSLSoapIn" />
      <wsdl:output message="tns:findOwnerFromSSLSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findOwnerFromSSL2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts square, suffix, lot and return owners associated with this SSL. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findOwnerFromSSL2SoapIn" />
      <wsdl:output message="tns:findOwnerFromSSL2SoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findSSLFromSquareSuffix">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts square and suffix (optional) and returns all SSLs in this Square/Suffix. *Note: If no addresses reside in the input square or square and suffix then nothing will be returned for this search.</wsdl:documentation>
      <wsdl:input message="tns:findSSLFromSquareSuffixSoapIn" />
      <wsdl:output message="tns:findSSLFromSquareSuffixSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findSSLFromSquareSuffix2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts square and suffix (optional) and return All SSLs in this Square/Suffix. The f parameter is for return format: xml or json, default is json. *Note: If no addresses reside in the input square or square and suffix then nothing will be returned for this search.</wsdl:documentation>
      <wsdl:input message="tns:findSSLFromSquareSuffix2SoapIn" />
      <wsdl:output message="tns:findSSLFromSquareSuffix2SoapOut" />
    </wsdl:operation>
    <wsdl:operation name="FindUnitFromAID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts address id and return all Residential Units associated with this address id.</wsdl:documentation>
      <wsdl:input message="tns:FindUnitFromAIDSoapIn" />
      <wsdl:output message="tns:FindUnitFromAIDSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="FindUnitFromAID2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts address id and return all Residential Units associated with this address id. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:FindUnitFromAID2SoapIn" />
      <wsdl:output message="tns:FindUnitFromAID2SoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findROW">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a roadway segment id and returns all right of way information associated with this roadway segment id.</wsdl:documentation>
      <wsdl:input message="tns:findROWSoapIn" />
      <wsdl:output message="tns:findROWSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="findROW2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a roadway segment id and return all right of way information associated with this roadway segment id. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findROW2SoapIn" />
      <wsdl:output message="tns:findROW2SoapOut" />
    </wsdl:operation>
    <wsdl:operation name="getDCStreetNames">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a dc quadrant (NW, SE, SW, NE, BN for boundary street) and return all street names in that DC quadrant (leave quad empty to retrieve all DC street names.). Optionally, you can also supply the first few letter of a street name to retrieve all similar street names.</wsdl:documentation>
      <wsdl:input message="tns:getDCStreetNamesSoapIn" />
      <wsdl:output message="tns:getDCStreetNamesSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="getDCStreetNames2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a dc quadrant (NW, SE, SW, NE, BN for boundary street) and return all street names in that DC quadrant (leave quad empty to retrieve all DC street names.). Optionally, you can also supply the first few letter of a street name to retrieve all similar street names. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:getDCStreetNames2SoapIn" />
      <wsdl:output message="tns:getDCStreetNames2SoapOut" />
    </wsdl:operation>
    <wsdl:operation name="getDCAddresses">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a string and return all DC addresses that starts with the string. Please provide at least four characters (number or letter) to perform the searching.</wsdl:documentation>
      <wsdl:input message="tns:getDCAddressesSoapIn" />
      <wsdl:output message="tns:getDCAddressesSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="getDCAddresses2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a string and return all DC addresses that starts with the string. Please provide at least four characters (number or letter) to perform the searching. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:getDCAddresses2SoapIn" />
      <wsdl:output message="tns:getDCAddresses2SoapOut" />
    </wsdl:operation>
    <wsdl:operation name="getDCParkingMeter">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a parking meter number and returns all information about that parking meter.</wsdl:documentation>
      <wsdl:input message="tns:getDCParkingMeterSoapIn" />
      <wsdl:output message="tns:getDCParkingMeterSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="getDCParkingMeter2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a parking meter number and returns all information about that parking meter. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:getDCParkingMeter2SoapIn" />
      <wsdl:output message="tns:getDCParkingMeter2SoapOut" />
    </wsdl:operation>
    <wsdl:operation name="getDCStreetLight">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a street light number (tsa light id) and returns all information about that street light.</wsdl:documentation>
      <wsdl:input message="tns:getDCStreetLightSoapIn" />
      <wsdl:output message="tns:getDCStreetLightSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="getDCStreetLight2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a street light number (tsa light id) and returns all information about that street light. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:getDCStreetLight2SoapIn" />
      <wsdl:output message="tns:getDCStreetLight2SoapOut" />
    </wsdl:operation>
    <wsdl:operation name="getStreetSegIDFromRoadwaySegID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a Roadway Segment ID and returns the corresponding Street Segment ID.</wsdl:documentation>
      <wsdl:input message="tns:getStreetSegIDFromRoadwaySegIDSoapIn" />
      <wsdl:output message="tns:getStreetSegIDFromRoadwaySegIDSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="getStreetSegIDFromRoadwaySegID2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a Roadway Segment ID and return the corresponding Street Segment ID. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:getStreetSegIDFromRoadwaySegID2SoapIn" />
      <wsdl:output message="tns:getStreetSegIDFromRoadwaySegID2SoapOut" />
    </wsdl:operation>
    <wsdl:operation name="getRoadwaySegIDFromStreetSegID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a Street Segment ID and returns all Roadway Segment IDs on that street segment.</wsdl:documentation>
      <wsdl:input message="tns:getRoadwaySegIDFromStreetSegIDSoapIn" />
      <wsdl:output message="tns:getRoadwaySegIDFromStreetSegIDSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="getRoadwaySegIDFromStreetSegID2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a Street Segment ID and return all Roadway Segment IDs on that street segment. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:getRoadwaySegIDFromStreetSegID2SoapIn" />
      <wsdl:output message="tns:getRoadwaySegIDFromStreetSegID2SoapOut" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="LocationVerifierHttpGet">
    <wsdl:operation name="verifyDCAddressThrouString">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts one concatenated DC address string.</wsdl:documentation>
      <wsdl:input message="tns:verifyDCAddressThrouStringHttpGetIn" />
      <wsdl:output message="tns:verifyDCAddressThrouStringHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="verifyDCAddressThrouString2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts one concatenated DC address string. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:verifyDCAddressThrouString2HttpGetIn" />
      <wsdl:output message="tns:verifyDCAddressThrouString2HttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="verifyDCAddressThrouComponents">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts four address components of an DC address.</wsdl:documentation>
      <wsdl:input message="tns:verifyDCAddressThrouComponentsHttpGetIn" />
      <wsdl:output message="tns:verifyDCAddressThrouComponentsHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="verifyDCAddressThrouComponents2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts four address components of an DC address. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:verifyDCAddressThrouComponents2HttpGetIn" />
      <wsdl:output message="tns:verifyDCAddressThrouComponents2HttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findOutsideLocation">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a string containing an address or intersection that is outside of DC boundary. If the string doesn’t contain the city, state or zip code of the address or intersection, user needs to provide them separately. It only handles the addresses and intersections in Maryland and Virginia.</wsdl:documentation>
      <wsdl:input message="tns:findOutsideLocationHttpGetIn" />
      <wsdl:output message="tns:findOutsideLocationHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findOutsideLocation2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a string containing an addresses or intersections that are outside DC boundary. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findOutsideLocation2HttpGetIn" />
      <wsdl:output message="tns:findOutsideLocation2HttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findInOutsideLocation">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a string containing either an inside or outside DC addresses or intersections.</wsdl:documentation>
      <wsdl:input message="tns:findInOutsideLocationHttpGetIn" />
      <wsdl:output message="tns:findInOutsideLocationHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findInOutsideLocation2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a string containing either an inside or outside DC addresses or intersections. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findInOutsideLocation2HttpGetIn" />
      <wsdl:output message="tns:findInOutsideLocation2HttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouString">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts one concatenated DC intersection string containing two street names separated by ' AND ', ' &amp; ', ' @ ', 'BELOW', 'ABOVE', 'UNDER', 'OVER', 'AND RAMP FROM' or 'AND RAMP TO'.</wsdl:documentation>
      <wsdl:input message="tns:findDCInterThrouStringHttpGetIn" />
      <wsdl:output message="tns:findDCInterThrouStringHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouString2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts one concatenated DC intersection string containing two street names seperated by ' And ', ' &amp; ', ' @ ', 'BELOW', 'ABOVE', 'UNDER', 'OVER'. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findDCInterThrouString2HttpGetIn" />
      <wsdl:output message="tns:findDCInterThrouString2HttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouComponents">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts two DC street name components.</wsdl:documentation>
      <wsdl:input message="tns:findDCInterThrouComponentsHttpGetIn" />
      <wsdl:output message="tns:findDCInterThrouComponentsHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouComponents2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts two DC street name components. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findDCInterThrouComponents2HttpGetIn" />
      <wsdl:output message="tns:findDCInterThrouComponents2HttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouThreeComponents">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts two DC street names and one intersection type components. The XType can be one of the 'AND', '@', '&amp;', 'UNDER', 'ABOVE', 'BELOW', 'OVER', 'AND RAMP FROM', or 'AND RAMP TO' key words.</wsdl:documentation>
      <wsdl:input message="tns:findDCInterThrouThreeComponentsHttpGetIn" />
      <wsdl:output message="tns:findDCInterThrouThreeComponentsHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouThreeComponents2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts two DC street names and one intersection type components. The XType can be one of the 'AND', '@', '&amp;', 'UNDER', 'ABOVE', 'BELOW', 'OVER', 'AND RAMP FROM', or 'AND RAMP TO' key words. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findDCInterThrouThreeComponents2HttpGetIn" />
      <wsdl:output message="tns:findDCInterThrouThreeComponents2HttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findDCBlkThrouString">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts one concatenated string with three DC street names separated by either 'BETWEEN' and 'AND', 'FROM' and 'TO' or just the block with key word 'BLOCK' or 'BLK'.  It verifies blocks inside DC boundary only.</wsdl:documentation>
      <wsdl:input message="tns:findDCBlkThrouStringHttpGetIn" />
      <wsdl:output message="tns:findDCBlkThrouStringHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findDCBlkThrouString2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts one concatenated string with three DC street names separated by 'BETWEEN' and 'AND', or 'BLOCK', 'BLK'.  It verifies blocks inside DC boundary only. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findDCBlkThrouString2HttpGetIn" />
      <wsdl:output message="tns:findDCBlkThrouString2HttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findDCBlkThrouComponents">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts three street name components.  It verifies blocks inside DC boundary only.</wsdl:documentation>
      <wsdl:input message="tns:findDCBlkThrouComponentsHttpGetIn" />
      <wsdl:output message="tns:findDCBlkThrouComponentsHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findDCBlkThrouComponents2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts three street name components.  It verifies blocks inside DC boundary only. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findDCBlkThrouComponents2HttpGetIn" />
      <wsdl:output message="tns:findDCBlkThrouComponents2HttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findAddFromSSL">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts three input parameters, square, suffix, and lot.</wsdl:documentation>
      <wsdl:input message="tns:findAddFromSSLHttpGetIn" />
      <wsdl:output message="tns:findAddFromSSLHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findAddFromPlace">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts one string containing a DC place name.</wsdl:documentation>
      <wsdl:input message="tns:findAddFromPlaceHttpGetIn" />
      <wsdl:output message="tns:findAddFromPlaceHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findAddFromPlace2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts one string containing a DC place name. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findAddFromPlace2HttpGetIn" />
      <wsdl:output message="tns:findAddFromPlace2HttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findAID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts one string containing a DC AID, only numeric value is allowed.</wsdl:documentation>
      <wsdl:input message="tns:findAIDHttpGetIn" />
      <wsdl:output message="tns:findAIDHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findAID2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts one string containing a DC AID, only numeric value is allowed. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findAID2HttpGetIn" />
      <wsdl:output message="tns:findAID2HttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findLocation">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Wrapper class for DC address, intersection, block, AID, place name, DC Parking Meters (must start with PMT), and DC street light (must start with SLT), not available for outside DC locations or SSL.</wsdl:documentation>
      <wsdl:input message="tns:findLocationHttpGetIn" />
      <wsdl:output message="tns:findLocationHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findLocation2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Wrapper class for DC address, intersection, block, AID, place name, DC Parking Meters (must start with PMT), and DC street light (must start with SLT), not available for outside DC locations or SSL. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findLocation2HttpGetIn" />
      <wsdl:output message="tns:findLocation2HttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findLocationBatch">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This batch class specially designed for DCGIS Batch Geocoder desktop tool use only. </wsdl:documentation>
      <wsdl:input message="tns:findLocationBatchHttpGetIn" />
      <wsdl:output message="tns:findLocationBatchHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findLocationBatch2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This batch class specially designed for DCGIS Batch Geocoder desktop tool use only. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findLocationBatch2HttpGetIn" />
      <wsdl:output message="tns:findLocationBatch2HttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findRdWySegIDFromMiniMARID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Find RoadwaySegID from the Mini MAR address ID.</wsdl:documentation>
      <wsdl:input message="tns:findRdWySegIDFromMiniMARIDHttpGetIn" />
      <wsdl:output message="tns:findRdWySegIDFromMiniMARIDHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findRdWySegIDFromMiniMARID2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Find RoadwaySegID from the Mini MAR address ID. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findRdWySegIDFromMiniMARID2HttpGetIn" />
      <wsdl:output message="tns:findRdWySegIDFromMiniMARID2HttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findDCBlkFromIntersection">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Find all blocks associated with an intersection, the street names input here must be perfect to make the result useful, we assume that user got the street name from MAR in a previous intersection verification process.</wsdl:documentation>
      <wsdl:input message="tns:findDCBlkFromIntersectionHttpGetIn" />
      <wsdl:output message="tns:findDCBlkFromIntersectionHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findDCBlkFromIntersection2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Find all blocks associated with an intersection, the street names input here must be perfect to make the result useful, we assume that user got the street name from MAR intersection verification process. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findDCBlkFromIntersection2HttpGetIn" />
      <wsdl:output message="tns:findDCBlkFromIntersection2HttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findMARIDFromMiniMARID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Find MiniMAR id from a given MAR Id.</wsdl:documentation>
      <wsdl:input message="tns:findMARIDFromMiniMARIDHttpGetIn" />
      <wsdl:output message="tns:findMARIDFromMiniMARIDHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findMARIDFromMiniMARID2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Find MiniMAR id from a given MAR Id. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findMARIDFromMiniMARID2HttpGetIn" />
      <wsdl:output message="tns:findMARIDFromMiniMARID2HttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findMiniMARIDFromMARID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Find MAR id from a given Mini MAR Id.</wsdl:documentation>
      <wsdl:input message="tns:findMiniMARIDFromMARIDHttpGetIn" />
      <wsdl:output message="tns:findMiniMARIDFromMARIDHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findMiniMARIDFromMARID2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Find MAR id from a given Mini MAR Id. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findMiniMARIDFromMARID2HttpGetIn" />
      <wsdl:output message="tns:findMiniMARIDFromMARID2HttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="reverseGeocoding">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Find MAR address/alias points within 200 meters from the given Maryland State Plane (NAD 83) coordinates and returns the nearest five. The returned distance unit is meter.</wsdl:documentation>
      <wsdl:input message="tns:reverseGeocodingHttpGetIn" />
      <wsdl:output message="tns:reverseGeocodingHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="reverseGeocoding2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Find MAR address/alias points within 200 meters from the given Maryland State Plane (NAD 83) coordinates and returns the nearest five. The returned distance unit is meter. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:reverseGeocoding2HttpGetIn" />
      <wsdl:output message="tns:reverseGeocoding2HttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="reverseLatLngGeocoding">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Find MAR address/alias points within 200 meters from the given Latitude and Longitude coordinates and returns the nearest five. The returned distance unit is meter.</wsdl:documentation>
      <wsdl:input message="tns:reverseLatLngGeocodingHttpGetIn" />
      <wsdl:output message="tns:reverseLatLngGeocodingHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="reverseLatLngGeocoding2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Find MAR address/alias points within 200 meters from the given Latitude and Longitude coordinates and returns the nearest five. The returned distance unit is meter. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:reverseLatLngGeocoding2HttpGetIn" />
      <wsdl:output message="tns:reverseLatLngGeocoding2HttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="submitAddress">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Submit address automatically(silently, set withVerification=false), or submit address that is Valid Not Verified after verification (set withVerification=true). The default value of withVerification is true.</wsdl:documentation>
      <wsdl:input message="tns:submitAddressHttpGetIn" />
      <wsdl:output message="tns:submitAddressHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="submitAddress2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Submit addresses automatically(silently, set withVerification=false), or submit address that is Valid Not Veirifed after verification (set withVerification=true). The default value of withVerification is true. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:submitAddress2HttpGetIn" />
      <wsdl:output message="tns:submitAddress2HttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findAddFromSSL_new">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts square, suffix, lot and return all AIDs associated with this SSL.</wsdl:documentation>
      <wsdl:input message="tns:findAddFromSSL_newHttpGetIn" />
      <wsdl:output message="tns:findAddFromSSL_newHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findAddFromSSL_new2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts square, suffix, lot and return all AIDs associated with this SSL.</wsdl:documentation>
      <wsdl:input message="tns:findAddFromSSL_new2HttpGetIn" />
      <wsdl:output message="tns:findAddFromSSL_new2HttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findAddFromSSL2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts square, suffix, lot and return all AIDs associated with this SSL. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findAddFromSSL2HttpGetIn" />
      <wsdl:output message="tns:findAddFromSSL2HttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findSSLFromAID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts address id and return all SSLs associated with this address id.</wsdl:documentation>
      <wsdl:input message="tns:findSSLFromAIDHttpGetIn" />
      <wsdl:output message="tns:findSSLFromAIDHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findSSLFromAID2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts address id and return all SSLs associated with this address id. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findSSLFromAID2HttpGetIn" />
      <wsdl:output message="tns:findSSLFromAID2HttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="FindCondoUnitFromAID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts address id and return all Condo Units associated with this address id.</wsdl:documentation>
      <wsdl:input message="tns:FindCondoUnitFromAIDHttpGetIn" />
      <wsdl:output message="tns:FindCondoUnitFromAIDHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="FindCondoUnitFromAID2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts address id and return all Condo Units associated with this address id. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:FindCondoUnitFromAID2HttpGetIn" />
      <wsdl:output message="tns:FindCondoUnitFromAID2HttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findAliasFromAID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts address id and return all Aliases associated with this address id.</wsdl:documentation>
      <wsdl:input message="tns:findAliasFromAIDHttpGetIn" />
      <wsdl:output message="tns:findAliasFromAIDHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findAliasFromAID2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts address id and return all Aliases associated with this address id. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findAliasFromAID2HttpGetIn" />
      <wsdl:output message="tns:findAliasFromAID2HttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findOwnerFromSSL">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts square, suffix, lot and return owners associated with this SSL.</wsdl:documentation>
      <wsdl:input message="tns:findOwnerFromSSLHttpGetIn" />
      <wsdl:output message="tns:findOwnerFromSSLHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findOwnerFromSSL2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts square, suffix, lot and return owners associated with this SSL. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findOwnerFromSSL2HttpGetIn" />
      <wsdl:output message="tns:findOwnerFromSSL2HttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findSSLFromSquareSuffix">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts square and suffix (optional) and returns all SSLs in this Square/Suffix. *Note: If no addresses reside in the input square or square and suffix then nothing will be returned for this search.</wsdl:documentation>
      <wsdl:input message="tns:findSSLFromSquareSuffixHttpGetIn" />
      <wsdl:output message="tns:findSSLFromSquareSuffixHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findSSLFromSquareSuffix2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts square and suffix (optional) and return All SSLs in this Square/Suffix. The f parameter is for return format: xml or json, default is json. *Note: If no addresses reside in the input square or square and suffix then nothing will be returned for this search.</wsdl:documentation>
      <wsdl:input message="tns:findSSLFromSquareSuffix2HttpGetIn" />
      <wsdl:output message="tns:findSSLFromSquareSuffix2HttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="FindUnitFromAID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts address id and return all Residential Units associated with this address id.</wsdl:documentation>
      <wsdl:input message="tns:FindUnitFromAIDHttpGetIn" />
      <wsdl:output message="tns:FindUnitFromAIDHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="FindUnitFromAID2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts address id and return all Residential Units associated with this address id. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:FindUnitFromAID2HttpGetIn" />
      <wsdl:output message="tns:FindUnitFromAID2HttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findROW">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a roadway segment id and returns all right of way information associated with this roadway segment id.</wsdl:documentation>
      <wsdl:input message="tns:findROWHttpGetIn" />
      <wsdl:output message="tns:findROWHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="findROW2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a roadway segment id and return all right of way information associated with this roadway segment id. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findROW2HttpGetIn" />
      <wsdl:output message="tns:findROW2HttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="getDCStreetNames">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a dc quadrant (NW, SE, SW, NE, BN for boundary street) and return all street names in that DC quadrant (leave quad empty to retrieve all DC street names.). Optionally, you can also supply the first few letter of a street name to retrieve all similar street names.</wsdl:documentation>
      <wsdl:input message="tns:getDCStreetNamesHttpGetIn" />
      <wsdl:output message="tns:getDCStreetNamesHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="getDCStreetNames2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a dc quadrant (NW, SE, SW, NE, BN for boundary street) and return all street names in that DC quadrant (leave quad empty to retrieve all DC street names.). Optionally, you can also supply the first few letter of a street name to retrieve all similar street names. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:getDCStreetNames2HttpGetIn" />
      <wsdl:output message="tns:getDCStreetNames2HttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="getDCAddresses">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a string and return all DC addresses that starts with the string. Please provide at least four characters (number or letter) to perform the searching.</wsdl:documentation>
      <wsdl:input message="tns:getDCAddressesHttpGetIn" />
      <wsdl:output message="tns:getDCAddressesHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="getDCAddresses2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a string and return all DC addresses that starts with the string. Please provide at least four characters (number or letter) to perform the searching. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:getDCAddresses2HttpGetIn" />
      <wsdl:output message="tns:getDCAddresses2HttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="getDCParkingMeter">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a parking meter number and returns all information about that parking meter.</wsdl:documentation>
      <wsdl:input message="tns:getDCParkingMeterHttpGetIn" />
      <wsdl:output message="tns:getDCParkingMeterHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="getDCParkingMeter2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a parking meter number and returns all information about that parking meter. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:getDCParkingMeter2HttpGetIn" />
      <wsdl:output message="tns:getDCParkingMeter2HttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="getDCStreetLight">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a street light number (tsa light id) and returns all information about that street light.</wsdl:documentation>
      <wsdl:input message="tns:getDCStreetLightHttpGetIn" />
      <wsdl:output message="tns:getDCStreetLightHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="getDCStreetLight2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a street light number (tsa light id) and returns all information about that street light. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:getDCStreetLight2HttpGetIn" />
      <wsdl:output message="tns:getDCStreetLight2HttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="getStreetSegIDFromRoadwaySegID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a Roadway Segment ID and returns the corresponding Street Segment ID.</wsdl:documentation>
      <wsdl:input message="tns:getStreetSegIDFromRoadwaySegIDHttpGetIn" />
      <wsdl:output message="tns:getStreetSegIDFromRoadwaySegIDHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="getStreetSegIDFromRoadwaySegID2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a Roadway Segment ID and return the corresponding Street Segment ID. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:getStreetSegIDFromRoadwaySegID2HttpGetIn" />
      <wsdl:output message="tns:getStreetSegIDFromRoadwaySegID2HttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="getRoadwaySegIDFromStreetSegID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a Street Segment ID and returns all Roadway Segment IDs on that street segment.</wsdl:documentation>
      <wsdl:input message="tns:getRoadwaySegIDFromStreetSegIDHttpGetIn" />
      <wsdl:output message="tns:getRoadwaySegIDFromStreetSegIDHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="getRoadwaySegIDFromStreetSegID2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a Street Segment ID and return all Roadway Segment IDs on that street segment. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:getRoadwaySegIDFromStreetSegID2HttpGetIn" />
      <wsdl:output message="tns:getRoadwaySegIDFromStreetSegID2HttpGetOut" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="LocationVerifierHttpPost">
    <wsdl:operation name="verifyDCAddressThrouString">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts one concatenated DC address string.</wsdl:documentation>
      <wsdl:input message="tns:verifyDCAddressThrouStringHttpPostIn" />
      <wsdl:output message="tns:verifyDCAddressThrouStringHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="verifyDCAddressThrouString2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts one concatenated DC address string. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:verifyDCAddressThrouString2HttpPostIn" />
      <wsdl:output message="tns:verifyDCAddressThrouString2HttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="verifyDCAddressThrouComponents">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts four address components of an DC address.</wsdl:documentation>
      <wsdl:input message="tns:verifyDCAddressThrouComponentsHttpPostIn" />
      <wsdl:output message="tns:verifyDCAddressThrouComponentsHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="verifyDCAddressThrouComponents2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts four address components of an DC address. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:verifyDCAddressThrouComponents2HttpPostIn" />
      <wsdl:output message="tns:verifyDCAddressThrouComponents2HttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findOutsideLocation">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a string containing an address or intersection that is outside of DC boundary. If the string doesn’t contain the city, state or zip code of the address or intersection, user needs to provide them separately. It only handles the addresses and intersections in Maryland and Virginia.</wsdl:documentation>
      <wsdl:input message="tns:findOutsideLocationHttpPostIn" />
      <wsdl:output message="tns:findOutsideLocationHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findOutsideLocation2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a string containing an addresses or intersections that are outside DC boundary. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findOutsideLocation2HttpPostIn" />
      <wsdl:output message="tns:findOutsideLocation2HttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findInOutsideLocation">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a string containing either an inside or outside DC addresses or intersections.</wsdl:documentation>
      <wsdl:input message="tns:findInOutsideLocationHttpPostIn" />
      <wsdl:output message="tns:findInOutsideLocationHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findInOutsideLocation2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a string containing either an inside or outside DC addresses or intersections. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findInOutsideLocation2HttpPostIn" />
      <wsdl:output message="tns:findInOutsideLocation2HttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouString">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts one concatenated DC intersection string containing two street names separated by ' AND ', ' &amp; ', ' @ ', 'BELOW', 'ABOVE', 'UNDER', 'OVER', 'AND RAMP FROM' or 'AND RAMP TO'.</wsdl:documentation>
      <wsdl:input message="tns:findDCInterThrouStringHttpPostIn" />
      <wsdl:output message="tns:findDCInterThrouStringHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouString2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts one concatenated DC intersection string containing two street names seperated by ' And ', ' &amp; ', ' @ ', 'BELOW', 'ABOVE', 'UNDER', 'OVER'. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findDCInterThrouString2HttpPostIn" />
      <wsdl:output message="tns:findDCInterThrouString2HttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouComponents">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts two DC street name components.</wsdl:documentation>
      <wsdl:input message="tns:findDCInterThrouComponentsHttpPostIn" />
      <wsdl:output message="tns:findDCInterThrouComponentsHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouComponents2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts two DC street name components. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findDCInterThrouComponents2HttpPostIn" />
      <wsdl:output message="tns:findDCInterThrouComponents2HttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouThreeComponents">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts two DC street names and one intersection type components. The XType can be one of the 'AND', '@', '&amp;', 'UNDER', 'ABOVE', 'BELOW', 'OVER', 'AND RAMP FROM', or 'AND RAMP TO' key words.</wsdl:documentation>
      <wsdl:input message="tns:findDCInterThrouThreeComponentsHttpPostIn" />
      <wsdl:output message="tns:findDCInterThrouThreeComponentsHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouThreeComponents2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts two DC street names and one intersection type components. The XType can be one of the 'AND', '@', '&amp;', 'UNDER', 'ABOVE', 'BELOW', 'OVER', 'AND RAMP FROM', or 'AND RAMP TO' key words. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findDCInterThrouThreeComponents2HttpPostIn" />
      <wsdl:output message="tns:findDCInterThrouThreeComponents2HttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findDCBlkThrouString">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts one concatenated string with three DC street names separated by either 'BETWEEN' and 'AND', 'FROM' and 'TO' or just the block with key word 'BLOCK' or 'BLK'.  It verifies blocks inside DC boundary only.</wsdl:documentation>
      <wsdl:input message="tns:findDCBlkThrouStringHttpPostIn" />
      <wsdl:output message="tns:findDCBlkThrouStringHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findDCBlkThrouString2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts one concatenated string with three DC street names separated by 'BETWEEN' and 'AND', or 'BLOCK', 'BLK'.  It verifies blocks inside DC boundary only. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findDCBlkThrouString2HttpPostIn" />
      <wsdl:output message="tns:findDCBlkThrouString2HttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findDCBlkThrouComponents">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts three street name components.  It verifies blocks inside DC boundary only.</wsdl:documentation>
      <wsdl:input message="tns:findDCBlkThrouComponentsHttpPostIn" />
      <wsdl:output message="tns:findDCBlkThrouComponentsHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findDCBlkThrouComponents2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts three street name components.  It verifies blocks inside DC boundary only. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findDCBlkThrouComponents2HttpPostIn" />
      <wsdl:output message="tns:findDCBlkThrouComponents2HttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findAddFromSSL">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts three input parameters, square, suffix, and lot.</wsdl:documentation>
      <wsdl:input message="tns:findAddFromSSLHttpPostIn" />
      <wsdl:output message="tns:findAddFromSSLHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findAddFromPlace">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts one string containing a DC place name.</wsdl:documentation>
      <wsdl:input message="tns:findAddFromPlaceHttpPostIn" />
      <wsdl:output message="tns:findAddFromPlaceHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findAddFromPlace2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts one string containing a DC place name. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findAddFromPlace2HttpPostIn" />
      <wsdl:output message="tns:findAddFromPlace2HttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findAID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts one string containing a DC AID, only numeric value is allowed.</wsdl:documentation>
      <wsdl:input message="tns:findAIDHttpPostIn" />
      <wsdl:output message="tns:findAIDHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findAID2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts one string containing a DC AID, only numeric value is allowed. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findAID2HttpPostIn" />
      <wsdl:output message="tns:findAID2HttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findLocation">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Wrapper class for DC address, intersection, block, AID, place name, DC Parking Meters (must start with PMT), and DC street light (must start with SLT), not available for outside DC locations or SSL.</wsdl:documentation>
      <wsdl:input message="tns:findLocationHttpPostIn" />
      <wsdl:output message="tns:findLocationHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findLocation2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Wrapper class for DC address, intersection, block, AID, place name, DC Parking Meters (must start with PMT), and DC street light (must start with SLT), not available for outside DC locations or SSL. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findLocation2HttpPostIn" />
      <wsdl:output message="tns:findLocation2HttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findLocationBatch">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This batch class specially designed for DCGIS Batch Geocoder desktop tool use only. </wsdl:documentation>
      <wsdl:input message="tns:findLocationBatchHttpPostIn" />
      <wsdl:output message="tns:findLocationBatchHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findLocationBatch2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This batch class specially designed for DCGIS Batch Geocoder desktop tool use only. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findLocationBatch2HttpPostIn" />
      <wsdl:output message="tns:findLocationBatch2HttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findRdWySegIDFromMiniMARID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Find RoadwaySegID from the Mini MAR address ID.</wsdl:documentation>
      <wsdl:input message="tns:findRdWySegIDFromMiniMARIDHttpPostIn" />
      <wsdl:output message="tns:findRdWySegIDFromMiniMARIDHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findRdWySegIDFromMiniMARID2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Find RoadwaySegID from the Mini MAR address ID. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findRdWySegIDFromMiniMARID2HttpPostIn" />
      <wsdl:output message="tns:findRdWySegIDFromMiniMARID2HttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findDCBlkFromIntersection">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Find all blocks associated with an intersection, the street names input here must be perfect to make the result useful, we assume that user got the street name from MAR in a previous intersection verification process.</wsdl:documentation>
      <wsdl:input message="tns:findDCBlkFromIntersectionHttpPostIn" />
      <wsdl:output message="tns:findDCBlkFromIntersectionHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findDCBlkFromIntersection2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Find all blocks associated with an intersection, the street names input here must be perfect to make the result useful, we assume that user got the street name from MAR intersection verification process. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findDCBlkFromIntersection2HttpPostIn" />
      <wsdl:output message="tns:findDCBlkFromIntersection2HttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findMARIDFromMiniMARID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Find MiniMAR id from a given MAR Id.</wsdl:documentation>
      <wsdl:input message="tns:findMARIDFromMiniMARIDHttpPostIn" />
      <wsdl:output message="tns:findMARIDFromMiniMARIDHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findMARIDFromMiniMARID2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Find MiniMAR id from a given MAR Id. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findMARIDFromMiniMARID2HttpPostIn" />
      <wsdl:output message="tns:findMARIDFromMiniMARID2HttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findMiniMARIDFromMARID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Find MAR id from a given Mini MAR Id.</wsdl:documentation>
      <wsdl:input message="tns:findMiniMARIDFromMARIDHttpPostIn" />
      <wsdl:output message="tns:findMiniMARIDFromMARIDHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findMiniMARIDFromMARID2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Find MAR id from a given Mini MAR Id. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findMiniMARIDFromMARID2HttpPostIn" />
      <wsdl:output message="tns:findMiniMARIDFromMARID2HttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="reverseGeocoding">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Find MAR address/alias points within 200 meters from the given Maryland State Plane (NAD 83) coordinates and returns the nearest five. The returned distance unit is meter.</wsdl:documentation>
      <wsdl:input message="tns:reverseGeocodingHttpPostIn" />
      <wsdl:output message="tns:reverseGeocodingHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="reverseGeocoding2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Find MAR address/alias points within 200 meters from the given Maryland State Plane (NAD 83) coordinates and returns the nearest five. The returned distance unit is meter. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:reverseGeocoding2HttpPostIn" />
      <wsdl:output message="tns:reverseGeocoding2HttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="reverseLatLngGeocoding">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Find MAR address/alias points within 200 meters from the given Latitude and Longitude coordinates and returns the nearest five. The returned distance unit is meter.</wsdl:documentation>
      <wsdl:input message="tns:reverseLatLngGeocodingHttpPostIn" />
      <wsdl:output message="tns:reverseLatLngGeocodingHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="reverseLatLngGeocoding2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Find MAR address/alias points within 200 meters from the given Latitude and Longitude coordinates and returns the nearest five. The returned distance unit is meter. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:reverseLatLngGeocoding2HttpPostIn" />
      <wsdl:output message="tns:reverseLatLngGeocoding2HttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="submitAddress">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Submit address automatically(silently, set withVerification=false), or submit address that is Valid Not Verified after verification (set withVerification=true). The default value of withVerification is true.</wsdl:documentation>
      <wsdl:input message="tns:submitAddressHttpPostIn" />
      <wsdl:output message="tns:submitAddressHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="submitAddress2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Submit addresses automatically(silently, set withVerification=false), or submit address that is Valid Not Veirifed after verification (set withVerification=true). The default value of withVerification is true. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:submitAddress2HttpPostIn" />
      <wsdl:output message="tns:submitAddress2HttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findAddFromSSL_new">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts square, suffix, lot and return all AIDs associated with this SSL.</wsdl:documentation>
      <wsdl:input message="tns:findAddFromSSL_newHttpPostIn" />
      <wsdl:output message="tns:findAddFromSSL_newHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findAddFromSSL_new2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts square, suffix, lot and return all AIDs associated with this SSL.</wsdl:documentation>
      <wsdl:input message="tns:findAddFromSSL_new2HttpPostIn" />
      <wsdl:output message="tns:findAddFromSSL_new2HttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findAddFromSSL2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts square, suffix, lot and return all AIDs associated with this SSL. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findAddFromSSL2HttpPostIn" />
      <wsdl:output message="tns:findAddFromSSL2HttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findSSLFromAID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts address id and return all SSLs associated with this address id.</wsdl:documentation>
      <wsdl:input message="tns:findSSLFromAIDHttpPostIn" />
      <wsdl:output message="tns:findSSLFromAIDHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findSSLFromAID2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts address id and return all SSLs associated with this address id. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findSSLFromAID2HttpPostIn" />
      <wsdl:output message="tns:findSSLFromAID2HttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="FindCondoUnitFromAID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts address id and return all Condo Units associated with this address id.</wsdl:documentation>
      <wsdl:input message="tns:FindCondoUnitFromAIDHttpPostIn" />
      <wsdl:output message="tns:FindCondoUnitFromAIDHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="FindCondoUnitFromAID2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts address id and return all Condo Units associated with this address id. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:FindCondoUnitFromAID2HttpPostIn" />
      <wsdl:output message="tns:FindCondoUnitFromAID2HttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findAliasFromAID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts address id and return all Aliases associated with this address id.</wsdl:documentation>
      <wsdl:input message="tns:findAliasFromAIDHttpPostIn" />
      <wsdl:output message="tns:findAliasFromAIDHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findAliasFromAID2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts address id and return all Aliases associated with this address id. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findAliasFromAID2HttpPostIn" />
      <wsdl:output message="tns:findAliasFromAID2HttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findOwnerFromSSL">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts square, suffix, lot and return owners associated with this SSL.</wsdl:documentation>
      <wsdl:input message="tns:findOwnerFromSSLHttpPostIn" />
      <wsdl:output message="tns:findOwnerFromSSLHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findOwnerFromSSL2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts square, suffix, lot and return owners associated with this SSL. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findOwnerFromSSL2HttpPostIn" />
      <wsdl:output message="tns:findOwnerFromSSL2HttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findSSLFromSquareSuffix">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts square and suffix (optional) and returns all SSLs in this Square/Suffix. *Note: If no addresses reside in the input square or square and suffix then nothing will be returned for this search.</wsdl:documentation>
      <wsdl:input message="tns:findSSLFromSquareSuffixHttpPostIn" />
      <wsdl:output message="tns:findSSLFromSquareSuffixHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findSSLFromSquareSuffix2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts square and suffix (optional) and return All SSLs in this Square/Suffix. The f parameter is for return format: xml or json, default is json. *Note: If no addresses reside in the input square or square and suffix then nothing will be returned for this search.</wsdl:documentation>
      <wsdl:input message="tns:findSSLFromSquareSuffix2HttpPostIn" />
      <wsdl:output message="tns:findSSLFromSquareSuffix2HttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="FindUnitFromAID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts address id and return all Residential Units associated with this address id.</wsdl:documentation>
      <wsdl:input message="tns:FindUnitFromAIDHttpPostIn" />
      <wsdl:output message="tns:FindUnitFromAIDHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="FindUnitFromAID2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts address id and return all Residential Units associated with this address id. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:FindUnitFromAID2HttpPostIn" />
      <wsdl:output message="tns:FindUnitFromAID2HttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findROW">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a roadway segment id and returns all right of way information associated with this roadway segment id.</wsdl:documentation>
      <wsdl:input message="tns:findROWHttpPostIn" />
      <wsdl:output message="tns:findROWHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="findROW2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a roadway segment id and return all right of way information associated with this roadway segment id. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:findROW2HttpPostIn" />
      <wsdl:output message="tns:findROW2HttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="getDCStreetNames">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a dc quadrant (NW, SE, SW, NE, BN for boundary street) and return all street names in that DC quadrant (leave quad empty to retrieve all DC street names.). Optionally, you can also supply the first few letter of a street name to retrieve all similar street names.</wsdl:documentation>
      <wsdl:input message="tns:getDCStreetNamesHttpPostIn" />
      <wsdl:output message="tns:getDCStreetNamesHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="getDCStreetNames2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a dc quadrant (NW, SE, SW, NE, BN for boundary street) and return all street names in that DC quadrant (leave quad empty to retrieve all DC street names.). Optionally, you can also supply the first few letter of a street name to retrieve all similar street names. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:getDCStreetNames2HttpPostIn" />
      <wsdl:output message="tns:getDCStreetNames2HttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="getDCAddresses">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a string and return all DC addresses that starts with the string. Please provide at least four characters (number or letter) to perform the searching.</wsdl:documentation>
      <wsdl:input message="tns:getDCAddressesHttpPostIn" />
      <wsdl:output message="tns:getDCAddressesHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="getDCAddresses2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a string and return all DC addresses that starts with the string. Please provide at least four characters (number or letter) to perform the searching. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:getDCAddresses2HttpPostIn" />
      <wsdl:output message="tns:getDCAddresses2HttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="getDCParkingMeter">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a parking meter number and returns all information about that parking meter.</wsdl:documentation>
      <wsdl:input message="tns:getDCParkingMeterHttpPostIn" />
      <wsdl:output message="tns:getDCParkingMeterHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="getDCParkingMeter2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a parking meter number and returns all information about that parking meter. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:getDCParkingMeter2HttpPostIn" />
      <wsdl:output message="tns:getDCParkingMeter2HttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="getDCStreetLight">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a street light number (tsa light id) and returns all information about that street light.</wsdl:documentation>
      <wsdl:input message="tns:getDCStreetLightHttpPostIn" />
      <wsdl:output message="tns:getDCStreetLightHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="getDCStreetLight2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a street light number (tsa light id) and returns all information about that street light. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:getDCStreetLight2HttpPostIn" />
      <wsdl:output message="tns:getDCStreetLight2HttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="getStreetSegIDFromRoadwaySegID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a Roadway Segment ID and returns the corresponding Street Segment ID.</wsdl:documentation>
      <wsdl:input message="tns:getStreetSegIDFromRoadwaySegIDHttpPostIn" />
      <wsdl:output message="tns:getStreetSegIDFromRoadwaySegIDHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="getStreetSegIDFromRoadwaySegID2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a Roadway Segment ID and return the corresponding Street Segment ID. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:getStreetSegIDFromRoadwaySegID2HttpPostIn" />
      <wsdl:output message="tns:getStreetSegIDFromRoadwaySegID2HttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="getRoadwaySegIDFromStreetSegID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a Street Segment ID and returns all Roadway Segment IDs on that street segment.</wsdl:documentation>
      <wsdl:input message="tns:getRoadwaySegIDFromStreetSegIDHttpPostIn" />
      <wsdl:output message="tns:getRoadwaySegIDFromStreetSegIDHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="getRoadwaySegIDFromStreetSegID2">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accepts a Street Segment ID and return all Roadway Segment IDs on that street segment. The f parameter is for return format: xml or json, default is json.</wsdl:documentation>
      <wsdl:input message="tns:getRoadwaySegIDFromStreetSegID2HttpPostIn" />
      <wsdl:output message="tns:getRoadwaySegIDFromStreetSegID2HttpPostOut" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="LocationVerifierSoap" type="tns:LocationVerifierSoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="verifyDCAddressThrouString">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/verifyDCAddressThrouString" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="verifyDCAddressThrouString2">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/verifyDCAddressThrouString2" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="verifyDCAddressThrouComponents">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/verifyDCAddressThrouComponents" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="verifyDCAddressThrouComponents2">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/verifyDCAddressThrouComponents2" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findOutsideLocation">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findOutsideLocation" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findOutsideLocation2">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findOutsideLocation2" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findInOutsideLocation">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findInOutsideLocation" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findInOutsideLocation2">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findInOutsideLocation2" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouString">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findDCInterThrouString" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouString2">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findDCInterThrouString2" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouComponents">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findDCInterThrouComponents" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouComponents2">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findDCInterThrouComponents2" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouThreeComponents">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findDCInterThrouThreeComponents" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouThreeComponents2">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findDCInterThrouThreeComponents2" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCBlkThrouString">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findDCBlkThrouString" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCBlkThrouString2">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findDCBlkThrouString2" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCBlkThrouComponents">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findDCBlkThrouComponents" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCBlkThrouComponents2">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findDCBlkThrouComponents2" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAddFromSSL">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findAddFromSSL" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAddFromPlace">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findAddFromPlace" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAddFromPlace2">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findAddFromPlace2" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAID">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findAID" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAID2">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findAID2" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findLocation">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findLocation" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findLocation2">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findLocation2" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findLocationBatch">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findLocationBatch" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findLocationBatch2">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findLocationBatch2" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findRdWySegIDFromMiniMARID">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findRdWySegIDFromMiniMARID" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findRdWySegIDFromMiniMARID2">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findRdWySegIDFromMiniMARID2" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCBlkFromIntersection">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findDCBlkFromIntersection" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCBlkFromIntersection2">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findDCBlkFromIntersection2" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findMARIDFromMiniMARID">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findMARIDFromMiniMARID" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findMARIDFromMiniMARID2">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findMARIDFromMiniMARID2" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findMiniMARIDFromMARID">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findMiniMARIDFromMARID" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findMiniMARIDFromMARID2">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findMiniMARIDFromMARID2" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="reverseGeocoding">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/reverseGeocoding" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="reverseGeocoding2">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/reverseGeocoding2" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="reverseLatLngGeocoding">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/reverseLatLngGeocoding" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="reverseLatLngGeocoding2">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/reverseLatLngGeocoding2" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="submitAddress">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/submitAddress" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="submitAddress2">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/submitAddress2" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAddFromSSL_new">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findAddFromSSL_new" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAddFromSSL_new2">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findAddFromSSL_new2" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAddFromSSL2">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findAddFromSSL2" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findSSLFromAID">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findSSLFromAID" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findSSLFromAID2">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findSSLFromAID2" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FindCondoUnitFromAID">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/FindCondoUnitFromAID" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FindCondoUnitFromAID2">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/FindCondoUnitFromAID2" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAliasFromAID">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findAliasFromAID" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAliasFromAID2">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findAliasFromAID2" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findOwnerFromSSL">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findOwnerFromSSL" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findOwnerFromSSL2">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findOwnerFromSSL2" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findSSLFromSquareSuffix">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findSSLFromSquareSuffix" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findSSLFromSquareSuffix2">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findSSLFromSquareSuffix2" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FindUnitFromAID">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/FindUnitFromAID" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FindUnitFromAID2">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/FindUnitFromAID2" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findROW">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findROW" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findROW2">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findROW2" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDCStreetNames">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/getDCStreetNames" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDCStreetNames2">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/getDCStreetNames2" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDCAddresses">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/getDCAddresses" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDCAddresses2">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/getDCAddresses2" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDCParkingMeter">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/getDCParkingMeter" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDCParkingMeter2">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/getDCParkingMeter2" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDCStreetLight">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/getDCStreetLight" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDCStreetLight2">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/getDCStreetLight2" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStreetSegIDFromRoadwaySegID">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/getStreetSegIDFromRoadwaySegID" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStreetSegIDFromRoadwaySegID2">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/getStreetSegIDFromRoadwaySegID2" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRoadwaySegIDFromStreetSegID">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/getRoadwaySegIDFromStreetSegID" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRoadwaySegIDFromStreetSegID2">
      <soap:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/getRoadwaySegIDFromStreetSegID2" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="LocationVerifierSoap12" type="tns:LocationVerifierSoap">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="verifyDCAddressThrouString">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/verifyDCAddressThrouString" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="verifyDCAddressThrouString2">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/verifyDCAddressThrouString2" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="verifyDCAddressThrouComponents">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/verifyDCAddressThrouComponents" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="verifyDCAddressThrouComponents2">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/verifyDCAddressThrouComponents2" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findOutsideLocation">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findOutsideLocation" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findOutsideLocation2">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findOutsideLocation2" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findInOutsideLocation">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findInOutsideLocation" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findInOutsideLocation2">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findInOutsideLocation2" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouString">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findDCInterThrouString" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouString2">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findDCInterThrouString2" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouComponents">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findDCInterThrouComponents" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouComponents2">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findDCInterThrouComponents2" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouThreeComponents">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findDCInterThrouThreeComponents" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouThreeComponents2">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findDCInterThrouThreeComponents2" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCBlkThrouString">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findDCBlkThrouString" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCBlkThrouString2">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findDCBlkThrouString2" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCBlkThrouComponents">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findDCBlkThrouComponents" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCBlkThrouComponents2">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findDCBlkThrouComponents2" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAddFromSSL">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findAddFromSSL" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAddFromPlace">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findAddFromPlace" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAddFromPlace2">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findAddFromPlace2" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAID">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findAID" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAID2">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findAID2" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findLocation">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findLocation" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findLocation2">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findLocation2" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findLocationBatch">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findLocationBatch" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findLocationBatch2">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findLocationBatch2" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findRdWySegIDFromMiniMARID">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findRdWySegIDFromMiniMARID" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findRdWySegIDFromMiniMARID2">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findRdWySegIDFromMiniMARID2" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCBlkFromIntersection">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findDCBlkFromIntersection" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCBlkFromIntersection2">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findDCBlkFromIntersection2" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findMARIDFromMiniMARID">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findMARIDFromMiniMARID" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findMARIDFromMiniMARID2">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findMARIDFromMiniMARID2" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findMiniMARIDFromMARID">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findMiniMARIDFromMARID" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findMiniMARIDFromMARID2">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findMiniMARIDFromMARID2" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="reverseGeocoding">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/reverseGeocoding" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="reverseGeocoding2">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/reverseGeocoding2" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="reverseLatLngGeocoding">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/reverseLatLngGeocoding" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="reverseLatLngGeocoding2">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/reverseLatLngGeocoding2" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="submitAddress">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/submitAddress" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="submitAddress2">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/submitAddress2" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAddFromSSL_new">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findAddFromSSL_new" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAddFromSSL_new2">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findAddFromSSL_new2" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAddFromSSL2">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findAddFromSSL2" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findSSLFromAID">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findSSLFromAID" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findSSLFromAID2">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findSSLFromAID2" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FindCondoUnitFromAID">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/FindCondoUnitFromAID" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FindCondoUnitFromAID2">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/FindCondoUnitFromAID2" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAliasFromAID">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findAliasFromAID" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAliasFromAID2">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findAliasFromAID2" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findOwnerFromSSL">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findOwnerFromSSL" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findOwnerFromSSL2">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findOwnerFromSSL2" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findSSLFromSquareSuffix">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findSSLFromSquareSuffix" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findSSLFromSquareSuffix2">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findSSLFromSquareSuffix2" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FindUnitFromAID">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/FindUnitFromAID" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FindUnitFromAID2">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/FindUnitFromAID2" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findROW">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findROW" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findROW2">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/findROW2" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDCStreetNames">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/getDCStreetNames" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDCStreetNames2">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/getDCStreetNames2" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDCAddresses">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/getDCAddresses" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDCAddresses2">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/getDCAddresses2" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDCParkingMeter">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/getDCParkingMeter" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDCParkingMeter2">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/getDCParkingMeter2" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDCStreetLight">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/getDCStreetLight" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDCStreetLight2">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/getDCStreetLight2" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStreetSegIDFromRoadwaySegID">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/getStreetSegIDFromRoadwaySegID" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStreetSegIDFromRoadwaySegID2">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/getStreetSegIDFromRoadwaySegID2" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRoadwaySegIDFromStreetSegID">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/getRoadwaySegIDFromStreetSegID" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRoadwaySegIDFromStreetSegID2">
      <soap12:operation soapAction="http://tempuri.org/newWebServices/LocationVerifier/getRoadwaySegIDFromStreetSegID2" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="LocationVerifierHttpGet" type="tns:LocationVerifierHttpGet">
    <http:binding verb="GET" />
    <wsdl:operation name="verifyDCAddressThrouString">
      <http:operation location="/verifyDCAddressThrouString" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="verifyDCAddressThrouString2">
      <http:operation location="/verifyDCAddressThrouString2" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="verifyDCAddressThrouComponents">
      <http:operation location="/verifyDCAddressThrouComponents" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="verifyDCAddressThrouComponents2">
      <http:operation location="/verifyDCAddressThrouComponents2" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findOutsideLocation">
      <http:operation location="/findOutsideLocation" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findOutsideLocation2">
      <http:operation location="/findOutsideLocation2" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findInOutsideLocation">
      <http:operation location="/findInOutsideLocation" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findInOutsideLocation2">
      <http:operation location="/findInOutsideLocation2" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouString">
      <http:operation location="/findDCInterThrouString" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouString2">
      <http:operation location="/findDCInterThrouString2" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouComponents">
      <http:operation location="/findDCInterThrouComponents" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouComponents2">
      <http:operation location="/findDCInterThrouComponents2" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouThreeComponents">
      <http:operation location="/findDCInterThrouThreeComponents" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouThreeComponents2">
      <http:operation location="/findDCInterThrouThreeComponents2" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCBlkThrouString">
      <http:operation location="/findDCBlkThrouString" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCBlkThrouString2">
      <http:operation location="/findDCBlkThrouString2" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCBlkThrouComponents">
      <http:operation location="/findDCBlkThrouComponents" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCBlkThrouComponents2">
      <http:operation location="/findDCBlkThrouComponents2" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAddFromSSL">
      <http:operation location="/findAddFromSSL" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAddFromPlace">
      <http:operation location="/findAddFromPlace" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAddFromPlace2">
      <http:operation location="/findAddFromPlace2" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAID">
      <http:operation location="/findAID" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAID2">
      <http:operation location="/findAID2" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findLocation">
      <http:operation location="/findLocation" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findLocation2">
      <http:operation location="/findLocation2" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findLocationBatch">
      <http:operation location="/findLocationBatch" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findLocationBatch2">
      <http:operation location="/findLocationBatch2" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findRdWySegIDFromMiniMARID">
      <http:operation location="/findRdWySegIDFromMiniMARID" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findRdWySegIDFromMiniMARID2">
      <http:operation location="/findRdWySegIDFromMiniMARID2" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCBlkFromIntersection">
      <http:operation location="/findDCBlkFromIntersection" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCBlkFromIntersection2">
      <http:operation location="/findDCBlkFromIntersection2" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findMARIDFromMiniMARID">
      <http:operation location="/findMARIDFromMiniMARID" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findMARIDFromMiniMARID2">
      <http:operation location="/findMARIDFromMiniMARID2" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findMiniMARIDFromMARID">
      <http:operation location="/findMiniMARIDFromMARID" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findMiniMARIDFromMARID2">
      <http:operation location="/findMiniMARIDFromMARID2" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="reverseGeocoding">
      <http:operation location="/reverseGeocoding" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="reverseGeocoding2">
      <http:operation location="/reverseGeocoding2" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="reverseLatLngGeocoding">
      <http:operation location="/reverseLatLngGeocoding" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="reverseLatLngGeocoding2">
      <http:operation location="/reverseLatLngGeocoding2" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="submitAddress">
      <http:operation location="/submitAddress" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="submitAddress2">
      <http:operation location="/submitAddress2" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAddFromSSL_new">
      <http:operation location="/findAddFromSSL_new" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAddFromSSL_new2">
      <http:operation location="/findAddFromSSL_new2" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAddFromSSL2">
      <http:operation location="/findAddFromSSL2" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findSSLFromAID">
      <http:operation location="/findSSLFromAID" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findSSLFromAID2">
      <http:operation location="/findSSLFromAID2" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FindCondoUnitFromAID">
      <http:operation location="/FindCondoUnitFromAID" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FindCondoUnitFromAID2">
      <http:operation location="/FindCondoUnitFromAID2" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAliasFromAID">
      <http:operation location="/findAliasFromAID" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAliasFromAID2">
      <http:operation location="/findAliasFromAID2" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findOwnerFromSSL">
      <http:operation location="/findOwnerFromSSL" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findOwnerFromSSL2">
      <http:operation location="/findOwnerFromSSL2" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findSSLFromSquareSuffix">
      <http:operation location="/findSSLFromSquareSuffix" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findSSLFromSquareSuffix2">
      <http:operation location="/findSSLFromSquareSuffix2" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FindUnitFromAID">
      <http:operation location="/FindUnitFromAID" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FindUnitFromAID2">
      <http:operation location="/FindUnitFromAID2" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findROW">
      <http:operation location="/findROW" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findROW2">
      <http:operation location="/findROW2" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDCStreetNames">
      <http:operation location="/getDCStreetNames" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDCStreetNames2">
      <http:operation location="/getDCStreetNames2" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDCAddresses">
      <http:operation location="/getDCAddresses" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDCAddresses2">
      <http:operation location="/getDCAddresses2" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDCParkingMeter">
      <http:operation location="/getDCParkingMeter" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDCParkingMeter2">
      <http:operation location="/getDCParkingMeter2" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDCStreetLight">
      <http:operation location="/getDCStreetLight" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDCStreetLight2">
      <http:operation location="/getDCStreetLight2" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStreetSegIDFromRoadwaySegID">
      <http:operation location="/getStreetSegIDFromRoadwaySegID" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStreetSegIDFromRoadwaySegID2">
      <http:operation location="/getStreetSegIDFromRoadwaySegID2" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRoadwaySegIDFromStreetSegID">
      <http:operation location="/getRoadwaySegIDFromStreetSegID" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRoadwaySegIDFromStreetSegID2">
      <http:operation location="/getRoadwaySegIDFromStreetSegID2" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="LocationVerifierHttpPost" type="tns:LocationVerifierHttpPost">
    <http:binding verb="POST" />
    <wsdl:operation name="verifyDCAddressThrouString">
      <http:operation location="/verifyDCAddressThrouString" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="verifyDCAddressThrouString2">
      <http:operation location="/verifyDCAddressThrouString2" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="verifyDCAddressThrouComponents">
      <http:operation location="/verifyDCAddressThrouComponents" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="verifyDCAddressThrouComponents2">
      <http:operation location="/verifyDCAddressThrouComponents2" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findOutsideLocation">
      <http:operation location="/findOutsideLocation" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findOutsideLocation2">
      <http:operation location="/findOutsideLocation2" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findInOutsideLocation">
      <http:operation location="/findInOutsideLocation" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findInOutsideLocation2">
      <http:operation location="/findInOutsideLocation2" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouString">
      <http:operation location="/findDCInterThrouString" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouString2">
      <http:operation location="/findDCInterThrouString2" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouComponents">
      <http:operation location="/findDCInterThrouComponents" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouComponents2">
      <http:operation location="/findDCInterThrouComponents2" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouThreeComponents">
      <http:operation location="/findDCInterThrouThreeComponents" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCInterThrouThreeComponents2">
      <http:operation location="/findDCInterThrouThreeComponents2" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCBlkThrouString">
      <http:operation location="/findDCBlkThrouString" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCBlkThrouString2">
      <http:operation location="/findDCBlkThrouString2" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCBlkThrouComponents">
      <http:operation location="/findDCBlkThrouComponents" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCBlkThrouComponents2">
      <http:operation location="/findDCBlkThrouComponents2" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAddFromSSL">
      <http:operation location="/findAddFromSSL" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAddFromPlace">
      <http:operation location="/findAddFromPlace" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAddFromPlace2">
      <http:operation location="/findAddFromPlace2" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAID">
      <http:operation location="/findAID" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAID2">
      <http:operation location="/findAID2" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findLocation">
      <http:operation location="/findLocation" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findLocation2">
      <http:operation location="/findLocation2" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findLocationBatch">
      <http:operation location="/findLocationBatch" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findLocationBatch2">
      <http:operation location="/findLocationBatch2" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findRdWySegIDFromMiniMARID">
      <http:operation location="/findRdWySegIDFromMiniMARID" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findRdWySegIDFromMiniMARID2">
      <http:operation location="/findRdWySegIDFromMiniMARID2" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCBlkFromIntersection">
      <http:operation location="/findDCBlkFromIntersection" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findDCBlkFromIntersection2">
      <http:operation location="/findDCBlkFromIntersection2" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findMARIDFromMiniMARID">
      <http:operation location="/findMARIDFromMiniMARID" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findMARIDFromMiniMARID2">
      <http:operation location="/findMARIDFromMiniMARID2" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findMiniMARIDFromMARID">
      <http:operation location="/findMiniMARIDFromMARID" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findMiniMARIDFromMARID2">
      <http:operation location="/findMiniMARIDFromMARID2" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="reverseGeocoding">
      <http:operation location="/reverseGeocoding" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="reverseGeocoding2">
      <http:operation location="/reverseGeocoding2" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="reverseLatLngGeocoding">
      <http:operation location="/reverseLatLngGeocoding" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="reverseLatLngGeocoding2">
      <http:operation location="/reverseLatLngGeocoding2" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="submitAddress">
      <http:operation location="/submitAddress" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="submitAddress2">
      <http:operation location="/submitAddress2" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAddFromSSL_new">
      <http:operation location="/findAddFromSSL_new" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAddFromSSL_new2">
      <http:operation location="/findAddFromSSL_new2" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAddFromSSL2">
      <http:operation location="/findAddFromSSL2" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findSSLFromAID">
      <http:operation location="/findSSLFromAID" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findSSLFromAID2">
      <http:operation location="/findSSLFromAID2" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FindCondoUnitFromAID">
      <http:operation location="/FindCondoUnitFromAID" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FindCondoUnitFromAID2">
      <http:operation location="/FindCondoUnitFromAID2" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAliasFromAID">
      <http:operation location="/findAliasFromAID" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findAliasFromAID2">
      <http:operation location="/findAliasFromAID2" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findOwnerFromSSL">
      <http:operation location="/findOwnerFromSSL" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findOwnerFromSSL2">
      <http:operation location="/findOwnerFromSSL2" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findSSLFromSquareSuffix">
      <http:operation location="/findSSLFromSquareSuffix" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findSSLFromSquareSuffix2">
      <http:operation location="/findSSLFromSquareSuffix2" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FindUnitFromAID">
      <http:operation location="/FindUnitFromAID" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FindUnitFromAID2">
      <http:operation location="/FindUnitFromAID2" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findROW">
      <http:operation location="/findROW" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findROW2">
      <http:operation location="/findROW2" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDCStreetNames">
      <http:operation location="/getDCStreetNames" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDCStreetNames2">
      <http:operation location="/getDCStreetNames2" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDCAddresses">
      <http:operation location="/getDCAddresses" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDCAddresses2">
      <http:operation location="/getDCAddresses2" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDCParkingMeter">
      <http:operation location="/getDCParkingMeter" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDCParkingMeter2">
      <http:operation location="/getDCParkingMeter2" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDCStreetLight">
      <http:operation location="/getDCStreetLight" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDCStreetLight2">
      <http:operation location="/getDCStreetLight2" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStreetSegIDFromRoadwaySegID">
      <http:operation location="/getStreetSegIDFromRoadwaySegID" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStreetSegIDFromRoadwaySegID2">
      <http:operation location="/getStreetSegIDFromRoadwaySegID2" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRoadwaySegIDFromStreetSegID">
      <http:operation location="/getRoadwaySegIDFromStreetSegID" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRoadwaySegIDFromStreetSegID2">
      <http:operation location="/getRoadwaySegIDFromStreetSegID2" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="LocationVerifier">
    <wsdl:port name="LocationVerifierSoap" binding="tns:LocationVerifierSoap">
      <soap:address location="http://citizenatlas.dc.gov/newwebservices/locationverifier.asmx" />
    </wsdl:port>
    <wsdl:port name="LocationVerifierSoap12" binding="tns:LocationVerifierSoap12">
      <soap12:address location="http://citizenatlas.dc.gov/newwebservices/locationverifier.asmx" />
    </wsdl:port>
    <wsdl:port name="LocationVerifierHttpGet" binding="tns:LocationVerifierHttpGet">
      <http:address location="http://citizenatlas.dc.gov/newwebservices/locationverifier.asmx" />
    </wsdl:port>
    <wsdl:port name="LocationVerifierHttpPost" binding="tns:LocationVerifierHttpPost">
      <http:address location="http://citizenatlas.dc.gov/newwebservices/locationverifier.asmx" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>